module ARRAY$SYNTAX [org.kframework.attributes.Location(Location(85,1,89,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports ARRAY-KORE$SYNTAX
endmodule


module ARRAY-IN-K$SYNTAX [org.kframework.attributes.Location(Location(57,1,83,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax List ::= "ensureOffsetList" "(" List "," Int "," KItem ")" [function() klabel(ensureOffsetList)]
  syntax Array ::= "makeArray" "(" Int "," KItem ")" [function() hook(ARRAY.make) klabel(makeArray)]
  syntax Array ::= "arr" "(" List "," Int "," KItem ")" [klabel(arr)]
endmodule


module ARRAY-KORE$SYNTAX [kore() org.kframework.attributes.Location(Location(53,1,55,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports ARRAY-IN-K$SYNTAX
endmodule


module ARRAY-SYNTAX [org.kframework.attributes.Location(Location(23,1,37,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports LIST
  imports ARRAY-SYNTAX$SYNTAX
  ModuleComment( Sets a range of indices (given by an index into the array and the number
   of indices to set) to the same value. ,[org.kframework.attributes.Location(Location(32,3,33,43)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module ARRAY-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(23,1,37,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  syntax KItem ::= Array "[" Int "]" [function() hook(ARRAY.lookup)]
  syntax KItem ::= Array
  syntax K
  syntax Bool ::= Int "in_keys" "(" Array ")" [function() functional() hook(ARRAY.in_keys)]
  syntax Bool ::= "isArray" "(" K ")" [function() predicate(Array)]
  syntax Array [element(_[_<-_]) hook(ARRAY.Array) org.kframework.attributes.Location(Location(26,3,26,69)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" KItem "]" [function() hook(ARRAY.update) klabel(_[_<-_]) symbol()]
  syntax Array ::= Array "[" Int "<-" "undef" "]" [function() hook(ARRAY.remove)]
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")" [function() hook(ARRAY.updateAll) klabel(updateArray)]
  syntax Array ::= "project:Array" "(" K ")" [function() projection()]
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," KItem ")" [function() hook(ARRAY.fill) klabel(fillArray)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Array`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module AUTO-CASTS [org.kframework.attributes.Location(Location(183,1,191,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports AUTO-CASTS$SYNTAX
  ModuleComment( this is part of the mechanism that allows concrete user syntax in K,[org.kframework.attributes.Location(Location(190,3,190,73)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(184,3,184,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( generates, for all sorts, productions of the form:,[org.kframework.attributes.Location(Location(185,3,185,56)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort ":Sort",[org.kframework.attributes.Location(Location(187,3,187,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort "::Sort",[org.kframework.attributes.Location(Location(186,3,186,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= K    ":>Sort",[org.kframework.attributes.Location(Location(189,3,189,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( KBott ::= Sort "<:Sort",[org.kframework.attributes.Location(Location(188,3,188,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module AUTO-CASTS$SYNTAX [org.kframework.attributes.Location(Location(183,1,191,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
endmodule


module AUTO-FOLLOW [org.kframework.attributes.Location(Location(193,1,204,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports AUTO-FOLLOW$SYNTAX
  ModuleComment( syntax K ::= K K,[org.kframework.attributes.Location(Location(200,3,200,22)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "b",[org.kframework.attributes.Location(Location(198,3,198,22)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "ab",[org.kframework.attributes.Location(Location(199,3,199,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "a",[org.kframework.attributes.Location(Location(197,3,197,22)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( of another terminal. This is useful to prevent ambiguities such as:,[org.kframework.attributes.Location(Location(196,3,196,73)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(194,3,194,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( generates a follow restriction for every terminal which is a prefix,[org.kframework.attributes.Location(Location(195,3,195,73)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( because it would turn the terminal into the terminal "ab".,[org.kframework.attributes.Location(Location(203,3,203,64)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( In the above example, the terminal "a" is not allowed to be followed by a "b",[org.kframework.attributes.Location(Location(202,3,202,83)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( #parse("ab", "K"),[org.kframework.attributes.Location(Location(201,3,201,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module AUTO-FOLLOW$SYNTAX [org.kframework.attributes.Location(Location(193,1,204,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  syntax KItem [hook(K.KItem) org.kframework.attributes.Location(Location(10,3,10,30)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax KConfigVar [org.kframework.attributes.Location(Location(12,3,12,27)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k)) token()]
  syntax K ::= KItem
  syntax K
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isKConfigVar" "(" K ")" [function() predicate(KConfigVar)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  syntax KItem [hook(K.KItem) org.kframework.attributes.Location(Location(10,3,10,30)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax KConfigVar [org.kframework.attributes.Location(Location(12,3,12,27)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k)) token()]
  syntax K ::= KItem
  syntax K
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isKConfigVar" "(" K ")" [function() predicate(KConfigVar)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BOOL [org.kframework.attributes.Location(Location(306,1,354,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47) contentStartColumn(8) contentStartLine(320) org.kframework.attributes.Location(Location(320,8,320,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474) contentStartColumn(8) contentStartLine(321) org.kframework.attributes.Location(Location(321,8,321,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f) contentStartColumn(8) contentStartLine(335) org.kframework.attributes.Location(Location(335,8,335,38)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8) contentStartColumn(8) contentStartLine(334) org.kframework.attributes.Location(Location(334,8,334,38)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a) contentStartColumn(8) contentStartLine(333) org.kframework.attributes.Location(Location(333,8,333,38)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool_`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde) contentStartColumn(8) contentStartLine(343) org.kframework.attributes.Location(Location(343,8,343,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5) contentStartColumn(8) contentStartLine(345) org.kframework.attributes.Location(Location(345,8,345,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool_`(#token("true","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda) contentStartColumn(8) contentStartLine(342) org.kframework.attributes.Location(Location(342,8,342,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0) contentStartColumn(8) contentStartLine(344) org.kframework.attributes.Location(Location(344,8,344,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL_Bool_Bool_Bool`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba) contentStartColumn(8) contentStartLine(338) org.kframework.attributes.Location(Location(338,8,338,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL_Bool_Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119) contentStartColumn(8) contentStartLine(340) org.kframework.attributes.Location(Location(340,8,340,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL_Bool_Bool_Bool`(#token("true","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002) contentStartColumn(8) contentStartLine(337) org.kframework.attributes.Location(Location(337,8,337,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL_Bool_Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976) contentStartColumn(8) contentStartLine(339) org.kframework.attributes.Location(Location(339,8,339,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool_`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f) contentStartColumn(8) contentStartLine(349) org.kframework.attributes.Location(Location(349,8,349,39)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3) contentStartColumn(8) contentStartLine(350) org.kframework.attributes.Location(Location(350,8,350,45)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472) contentStartColumn(8) contentStartLine(347) org.kframework.attributes.Location(Location(347,8,347,36)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool_`(#token("false","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548) contentStartColumn(8) contentStartLine(348) org.kframework.attributes.Location(Location(348,8,348,40)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool_`(_0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8) contentStartColumn(8) contentStartLine(331) org.kframework.attributes.Location(Location(331,8,331,36)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d) contentStartColumn(8) contentStartLine(329) org.kframework.attributes.Location(Location(329,8,329,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f) contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool_`(#token("false","Bool"),_0)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64) contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,36)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(_0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f) contentStartColumn(8) contentStartLine(326) org.kframework.attributes.Location(Location(326,8,326,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0) contentStartColumn(8) contentStartLine(324) org.kframework.attributes.Location(Location(324,8,324,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0) contentStartColumn(8) contentStartLine(323) org.kframework.attributes.Location(Location(323,8,323,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#token("false","Bool"),_0)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253) contentStartColumn(8) contentStartLine(325) org.kframework.attributes.Location(Location(325,8,325,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1) contentStartColumn(8) contentStartLine(352) org.kframework.attributes.Location(Location(352,8,352,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module BOOL$SYNTAX [org.kframework.attributes.Location(Location(306,1,354,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority notBool_ > _orElseBool_ _andThenBool_ _impliesBool_ _andBool_ _xorBool_ _orBool__BOOL_Bool_Bool_Bool > _==Bool_ _=/=Bool_
  syntax associativity left _xorBool_
  syntax associativity left _orElseBool_
  syntax associativity left _orBool__BOOL_Bool_Bool_Bool
  syntax associativity left _impliesBool_
  syntax associativity left _andThenBool_
  syntax associativity left _andBool_
  syntax associativity left _==Bool_ _=/=Bool_
  syntax associativity left _==Bool_
  syntax associativity left _=/=Bool_
  syntax Bool ::= Bool "xorBool" Bool [boolOperation() function() functional() hook(BOOL.xor) klabel(_xorBool_) left() smt-hook(xor) symbol()]
  syntax Bool ::= Bool "orElseBool" Bool [boolOperation() function() functional() hook(BOOL.orElse) klabel(_orElseBool_) left() smt-hook(or) symbol()]
  syntax Bool ::= Bool "orBool" Bool [boolOperation() function() functional() hook(BOOL.or) klabel(_orBool_) latex({#1}\vee_{\scriptstyle\it Bool}{#2}) left() smt-hook(or)]
  syntax Bool ::= Bool "impliesBool" Bool [boolOperation() function() functional() hook(BOOL.implies) klabel(_impliesBool_) left() smt-hook(=>) symbol()]
  syntax Bool ::= Bool "andThenBool" Bool [boolOperation() function() functional() hook(BOOL.andThen) klabel(_andThenBool_) left() smt-hook(and) symbol()]
  syntax Bool ::= Bool "andBool" Bool [boolOperation() function() functional() hook(BOOL.and) klabel(_andBool_) latex({#1}\wedge_{\scriptstyle\it Bool}{#2}) left() smt-hook(and) symbol()]
  syntax Bool ::= Bool "==Bool" Bool [function() functional() hook(BOOL.eq) klabel(_==Bool_) left() smt-hook(=) symbol()]
  syntax Bool ::= Bool "=/=Bool" Bool [function() functional() hook(BOOL.ne) klabel(_=/=Bool_) left() smt-hook(distinct) symbol()]
  syntax Bool ::= "notBool" Bool [boolOperation() function() functional() hook(BOOL.not) klabel(notBool_) latex(\neg_{\scriptstyle\it Bool}{#1}) smt-hook(not) symbol()]
endmodule


module BOOL-SYNTAX [org.kframework.attributes.Location(Location(300,1,304,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(300,1,304,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool [hook(BOOL.Bool) org.kframework.attributes.Location(Location(301,3,301,31)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Bool ::= "true" [token()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  syntax Bool ::= "false" [token()]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(300,1,304,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool [hook(BOOL.Bool) org.kframework.attributes.Location(Location(301,3,301,31)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Bool ::= "true" [token()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  syntax Bool ::= "false" [token()]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BUILTIN-ID-TOKENS [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "is#UpperId" "(" K ")" [function() predicate(#UpperId)]
  syntax Bool ::= "is#LowerId" "(" K ")" [function() predicate(#LowerId)]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2) token()]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2) token()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  syntax Bool ::= "is#UpperId" "(" K ")" [function() predicate(#UpperId)]
  syntax Bool ::= "is#LowerId" "(" K ")" [function() predicate(#LowerId)]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2) token()]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2) token()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BYTES$SYNTAX [org.kframework.attributes.Location(Location(799,1,813,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports INT$SYNTAX
  imports BYTES-KORE$SYNTAX
  imports BYTES-CONCRETE$SYNTAX
endmodule


module BYTES-CONCRETE$SYNTAX [concrete() org.kframework.attributes.Location(Location(787,1,789,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BYTES-HOOKED$SYNTAX
endmodule


module BYTES-HOOKED$SYNTAX [org.kframework.attributes.Location(Location(675,1,704,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax associativity right _+Bytes__BYTES-HOOKED_Bytes_Bytes_Bytes
  syntax String ::= "Bytes2String" "(" Bytes ")" [function() functional() hook(BYTES.bytes2string) klabel(Bytes2String)]
  syntax Signedness ::= "project:Signedness" "(" K ")" [function() projection()]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes) symbol()]
  syntax Signedness ::= "Signed" [klabel(signedBytes) symbol()]
  syntax KItem ::= Signedness
  syntax KItem ::= Int
  syntax KItem ::= Endianness
  syntax KItem ::= Bytes
  syntax K
  syntax Int ::= Bytes "[" Int "]" [function() hook(BYTES.get)]
  syntax Int ::= "project:Int" "(" K ")" [function() projection()]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function() functional() hook(BYTES.length) klabel(lengthBytes) smtlib(lengthBytes)]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function() functional() hook(BYTES.bytes2int) klabel(Bytes2Int)]
  syntax Endianness ::= "project:Endianness" "(" K ")" [function() projection()]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes) symbol()]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes) symbol()]
  syntax Bytes [hook(BYTES.Bytes) org.kframework.attributes.Location(Location(678,3,678,41)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) token()]
  syntax Bytes ::= Bytes "[" Int "<-" Int "]" [function() hook(BYTES.update)]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function() functional() hook(BYTES.concat) right()]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function() hook(BYTES.substr) klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function() functional() hook(BYTES.reverse) klabel(reverseBytes)]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function() hook(BYTES.replaceAt) klabel(replaceAtBytes)]
  syntax Bytes ::= "project:Bytes" "(" K ")" [function() projection()]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function() hook(BYTES.padRight) klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function() hook(BYTES.padLeft) klabel(padLeftBytes)]
  syntax Bytes ::= "String2Bytes" "(" String ")" [function() functional() hook(BYTES.string2bytes) klabel(String2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function() functional() hook(BYTES.int2bytes) klabel(Int2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function() functional() klabel(Int2BytesNoLen)]
  syntax Bytes ::= ".Bytes" [function() functional() hook(BYTES.empty)]
  syntax Bool ::= "isSignedness" "(" K ")" [function() predicate(Signedness)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isInt" "(" K ")" [function() predicate(Int)]
  syntax Bool ::= "isEndianness" "(" K ")" [function() predicate(Endianness)]
  syntax Bool ::= "isBytes" "(" K ")" [function() predicate(Bytes)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Signedness`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Endianness`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Bytes`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BYTES-IN-K$SYNTAX [org.kframework.attributes.Location(Location(706,1,785,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-BUFFER$SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax associativity right _+Bytes__BYTES-IN-K_Bytes_Bytes_Bytes
  syntax String ::= "Bytes2String" "(" Bytes "," StringBuffer ")" [function() klabel(Bytes2StringAux)]
  syntax String ::= "Bytes2String" "(" Bytes ")" [function() functional() klabel(Bytes2String)]
  syntax Signedness ::= "project:Signedness" "(" K ")" [function() projection()]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes) symbol()]
  syntax Signedness ::= "Signed" [klabel(signedBytes) symbol()]
  syntax KItem ::= Signedness
  syntax KItem ::= Endianness
  syntax KItem ::= Bytes
  syntax K
  syntax Int ::= Bytes "[" Int "]" [function()]
  syntax Int ::= "lengthBytes" "(" Bytes "," Int ")" [function() klabel(lengthBytesAux) smtlib(lengthBytesAux)]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function() functional() klabel(lengthBytes) smtlib(lengthBytes)]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function() functional() klabel(Bytes2Int)]
  syntax Endianness ::= "project:Endianness" "(" K ")" [function() projection()]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes) symbol()]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes) symbol()]
  syntax Bytes ::= Int ":" Bytes
  syntax Bytes ::= Bytes "[" Int "<-" Int "]" [function()]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function() functional() right()]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function() klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes "," Bytes ")" [function() klabel(reverseBytesAux)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function() functional() klabel(reverseBytes)]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function() klabel(replaceAtBytes)]
  syntax Bytes ::= "project:Bytes" "(" K ")" [function() projection()]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function() klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function() klabel(padLeftBytes)]
  syntax Bytes ::= "nilBytes"
  syntax Bytes ::= "String2Bytes" "(" String ")" [function() functional() klabel(String2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function() functional() klabel(Int2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function() functional() klabel(Int2BytesNoLen)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Bytes ")" [function() klabel(Int2BytesAux)]
  syntax Bytes ::= ".Bytes" [function() functional()]
  syntax Bool ::= "isSignedness" "(" K ")" [function() predicate(Signedness)]
  syntax Bool ::= "isEndianness" "(" K ")" [function() predicate(Endianness)]
  syntax Bool ::= "isBytes" "(" K ")" [function() predicate(Bytes)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Signedness`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Endianness`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Bytes`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module BYTES-KORE$SYNTAX [kore() org.kframework.attributes.Location(Location(791,1,793,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BYTES-HOOKED$SYNTAX
endmodule


module COLLECTIONS [org.kframework.attributes.Location(Location(290,1,298,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports SET
  imports MAP
  imports LIST
  imports COLLECTIONS$SYNTAX
endmodule


module COLLECTIONS$SYNTAX [org.kframework.attributes.Location(Location(290,1,298,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  syntax Set ::= "List2Set" "(" List ")" [function() functional() hook(SET.list2set) klabel(List2Set)]
  syntax List ::= "Set2List" "(" Set ")" [function() hook(SET.set2list) klabel(Set2List)]
endmodule


module CONFIG-CELLS [org.kframework.attributes.Location(Location(136,1,150,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports KCELLS
  imports CONFIG-CELLS$SYNTAX
endmodule


module CONFIG-CELLS$SYNTAX [org.kframework.attributes.Location(Location(136,1,150,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax K
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">" [klabel(#configCell) symbol()]
  syntax Cell ::= "<" #CellName "/>" [klabel(#externalCell) symbol()]
  syntax Bool ::= "is#CellProperty" "(" K ")" [function() predicate(#CellProperty)]
  syntax Bool ::= "is#CellProperties" "(" K ")" [function() predicate(#CellProperties)]
  syntax Bool ::= "is#CellName" "(" K ")" [function() predicate(#CellName)]
  syntax #CellProperty ::= #CellName "=" KString [klabel(#cellProperty) symbol()]
  syntax #CellProperties ::= #CellProperty #CellProperties [klabel(#cellPropertyList) symbol()]
  syntax #CellProperties ::= "" [klabel(#cellPropertyListTerminator) symbol()]
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*" [prec(1) token()]
  syntax #CellName ::= #UpperId [token()]
  syntax #CellName ::= #LowerId [token()]
endmodule


module CONFIGURATION-PRIMITIVES [org.kframework.attributes.Location(Location(1333,1,1335,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports CONFIGURATION-PRIMITIVES$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module CONFIGURATION-PRIMITIVES$SYNTAX [org.kframework.attributes.Location(Location(1333,1,1335,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax K ::= "#RESTORE_CONFIGURATION" "(" K ")" [klabel(#RESTORE_CONFIGURATION)]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module DEFAULT-LAYOUT [org.kframework.attributes.Location(Location(227,1,231,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports DEFAULT-LAYOUT$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module DEFAULT-LAYOUT$SYNTAX [org.kframework.attributes.Location(Location(227,1,231,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  syntax Bool ::= "is#Layout" "(" K ")" [function() predicate(#Layout)]
  syntax #Layout ::= r"(\\/\\/[^\\n\\r]*)"
  syntax #Layout ::= r"(\\/\\*([^\\*]|(\\*+([^\\*\\/])))*\\*+\\/)"
  syntax #Layout ::= r"([\\ \\n\\r\\t])"
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module DOMAINS [org.kframework.attributes.Location(Location(11,1,21,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING
  imports SET
  imports MAP
  imports LIST
  imports K-IO
  imports INT
  imports DOMAINS-SYNTAX
  imports DOMAINS$SYNTAX
  imports BOOL
  imports BASIC-K
endmodule


module DOMAINS$SYNTAX [org.kframework.attributes.Location(Location(11,1,21,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  imports K-IO$SYNTAX
  imports INT$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module DOMAINS-SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports ID
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL-SYNTAX
endmodule


module DOMAINS-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  imports STRING-SYNTAX$SYNTAX
  imports ID$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
endmodule


module FLOAT$SYNTAX [org.kframework.attributes.Location(Location(489,1,553,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority --Float__FLOAT_Float_Float > _^Float__FLOAT_Float_Float_Float > _/Float__FLOAT_Float_Float_Float _%Float__FLOAT_Float_Float_Float _*Float__FLOAT_Float_Float_Float > _-Float__FLOAT_Float_Float_Float _+Float__FLOAT_Float_Float_Float
  syntax associativity left _^Float__FLOAT_Float_Float_Float
  syntax associativity left _>Float__FLOAT_Bool_Float_Float
  syntax associativity left _>=Float__FLOAT_Bool_Float_Float
  syntax associativity left _==Float__FLOAT_Bool_Float_Float
  syntax associativity left _=/=Float__FLOAT_Bool_Float_Float
  syntax associativity left _<Float__FLOAT_Bool_Float_Float
  syntax associativity left _<=Float__FLOAT_Bool_Float_Float
  syntax associativity left _/Float__FLOAT_Float_Float_Float _%Float__FLOAT_Float_Float_Float _*Float__FLOAT_Float_Float_Float
  syntax associativity left _/Float__FLOAT_Float_Float_Float
  syntax associativity left _-Float__FLOAT_Float_Float_Float _+Float__FLOAT_Float_Float_Float
  syntax associativity left _-Float__FLOAT_Float_Float_Float
  syntax associativity left _+Float__FLOAT_Float_Float_Float
  syntax associativity left _*Float__FLOAT_Float_Float_Float
  syntax associativity left _%Float__FLOAT_Float_Float_Float
  syntax MInt ::= "significandFloat" "(" Float ")" [function() hook(FLOAT.significand) klabel(significandFloat)]
  syntax MInt ::= "project:MInt" "(" K ")" [function() projection()]
  syntax KItem ::= MInt
  syntax K
  syntax Int ::= "precisionFloat" "(" Float ")" [function() functional() hook(FLOAT.precision) klabel(precisionFloat)]
  syntax Int ::= "exponentFloat" "(" Float ")" [function() functional() hook(FLOAT.exponent) klabel(exponentFloat)]
  syntax Int ::= "exponentBitsFloat" "(" Float ")" [function() functional() hook(FLOAT.exponentBits) klabel(exponentBitsFloat)]
  syntax Int ::= "Float2Int" "(" Float ")" [function() functional() hook(FLOAT.float2int) klabel(Float2Int) latex({\\it{}Float2Int})]
  syntax Float ::= Float "^Float" Float [function() hook(FLOAT.pow) latex({#1}^{#2}) left()]
  syntax Float ::= Float "/Float" Float [function() hook(FLOAT.div) latex({#1}\mathrel{\div_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.div roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "-Float" Float [function() hook(FLOAT.sub) latex({#1}\mathrel{-_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.sub roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "+Float" Float [function() hook(FLOAT.add) latex({#1}\mathrel{+_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.add roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "*Float" Float [function() hook(FLOAT.mul) latex({#1}\mathrel{\ast_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.mul roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "%Float" Float [function() hook(FLOAT.rem) latex({#1}\mathrel{\%_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.rem roundNearestTiesToEven #1 #2))]
  syntax Float ::= "tanFloat" "(" Float ")" [function() hook(FLOAT.tan) klabel(tanFloat)]
  syntax Float ::= "sqrtFloat" "(" Float ")" [function() klabel(sqrtFloat)]
  syntax Float ::= "sinFloat" "(" Float ")" [function() functional() hook(FLOAT.sin) klabel(sinFloat)]
  syntax Float ::= "roundFloat" "(" Float "," Int "," Int ")" [function() hook(FLOAT.round) klabel(roundFloat)]
  syntax Float ::= "rootFloat" "(" Float "," Int ")" [function() hook(FLOAT.root) klabel(rootFloat)]
  syntax Float ::= "minValueFloat" "(" Int "," Int ")" [function() hook(FLOAT.minValue) klabel(minValueFloat)]
  syntax Float ::= "minFloat" "(" Float "," Float ")" [function() hook(FLOAT.min) klabel(minFloat) smt-hook(fp.min)]
  syntax Float ::= "maxValueFloat" "(" Int "," Int ")" [function() hook(FLOAT.maxValue) klabel(maxValueFloat)]
  syntax Float ::= "maxFloat" "(" Float "," Float ")" [function() hook(FLOAT.max) klabel(maxFloat) smt-hook(fp.max)]
  syntax Float ::= "logFloat" "(" Float ")" [function() hook(FLOAT.log) klabel(logFloat)]
  syntax Float ::= "floorFloat" "(" Float ")" [function() functional() hook(FLOAT.floor) klabel(floorFloat)]
  syntax Float ::= "expFloat" "(" Float ")" [function() functional() hook(FLOAT.exp) klabel(expFloat)]
  syntax Float ::= "cosFloat" "(" Float ")" [function() functional() hook(FLOAT.cos) klabel(cosFloat)]
  syntax Float ::= "ceilFloat" "(" Float ")" [function() functional() hook(FLOAT.ceil) klabel(ceilFloat)]
  syntax Float ::= "atanFloat" "(" Float ")" [function() functional() hook(FLOAT.atan) klabel(atanFloat)]
  syntax Float ::= "atan2Float" "(" Float "," Float ")" [function() hook(FLOAT.atan2) klabel(atan2Float)]
  syntax Float ::= "asinFloat" "(" Float ")" [function() hook(FLOAT.asin) klabel(asinFloat)]
  syntax Float ::= "acosFloat" "(" Float ")" [function() hook(FLOAT.acos) klabel(acosFloat)]
  syntax Float ::= "absFloat" "(" Float ")" [function() functional() hook(FLOAT.abs) klabel(absFloat) smt-hook(fp.abs)]
  syntax Float ::= "Int2Float" "(" Int "," Int "," Int ")" [function() hook(FLOAT.int2float) klabel(Int2Float) latex({\\it{}Int2Float})]
  syntax Float ::= "--Float" Float [function() functional() hook(FLOAT.neg) smt-hook(fp.neg)]
  syntax Bool ::= Float ">Float" Float [function() hook(FLOAT.gt) latex({#1}\mathrel{>_{\scriptstyle\it Float}}{#2}) left() smt-hook(fg.gt)]
  syntax Bool ::= Float ">=Float" Float [function() hook(FLOAT.ge) latex({#1}\mathrel{\geq_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.geq)]
  syntax Bool ::= Float "==Float" Float [function() hook(FLOAT.eq) klabel(_==Float_) latex({#1}\mathrel{==_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.eq)]
  syntax Bool ::= Float "=/=Float" Float [function() latex({#1}\mathrel{\neq_{\scriptstyle\it Float}}{#2}) left() smt-hook((not (fp.eq #1 #2)))]
  syntax Bool ::= Float "<Float" Float [function() hook(FLOAT.lt) latex({#1}\mathrel{<_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.lt)]
  syntax Bool ::= Float "<=Float" Float [function() hook(FLOAT.le) latex({#1}\mathrel{\leq_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.leq)]
  syntax Bool ::= "signFloat" "(" Float ")" [function() functional() hook(FLOAT.sign) klabel(signFloat)]
  syntax Bool ::= "isNaN" "(" Float ")" [function() functional() hook(FLOAT.isNaN) klabel(isNaN) smt-hook(fp.isNaN)]
  syntax Bool ::= "isMInt" "(" K ")" [function() predicate(MInt)]
  syntax Bool ::= "isInfinite" "(" Float ")" [function() functional() klabel(isInfinite)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:MInt`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(482,1,487,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(482,1,487,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(482,1,487,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Float
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(483,3,483,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1) token()]
  syntax Float ::= "project:Float" "(" K ")" [function() projection()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isFloat" "(" K ")" [function() predicate(Float)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Float`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(482,1,487,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Float
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(483,3,483,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1) token()]
  syntax Float ::= "project:Float" "(" K ")" [function() projection()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isFloat" "(" K ")" [function() predicate(Float)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Float`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(482,1,487,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Float
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(483,3,483,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1) token()]
  syntax Float ::= "project:Float" "(" K ")" [function() projection()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isFloat" "(" K ")" [function() predicate(Float)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Float`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module HOPPER [org.kframework.attributes.Location(Location(225,1,230,9)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k))]
  imports HOPPER-SYNTAX
  imports HOPPER$SYNTAX
  imports DOMAINS
  syntax TCellOpt ::= TCell
  syntax TCellOpt ::= "project:TCellOpt" "(" K ")" [function() projection()]
  syntax TCellOpt ::= "noTCell" [cellOptAbsent(TCell)]
  syntax KItem ::= TCellOpt
  syntax KItem ::= GeneratedTopCellFragment
  syntax KItem ::= GeneratedTopCell
  syntax KItem ::= GeneratedCounterCellOpt
  syntax KItem ::= GeneratedCounterCell
  syntax KItem ::= "#freezerif(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt1_" "(" K "," K ")"
  syntax KItem ::= "#freezerif(_)__HOPPER-SYNTAX_Stmt_BExp_Block1_" "(" K ")"
  syntax KItem ::= "#freezer_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block1_" "(" K "," K ")"
  syntax KItem ::= "#freezer_>__HOPPER-SYNTAX_BExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_>__HOPPER-SYNTAX_BExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_>=__HOPPER-SYNTAX_BExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_>=__HOPPER-SYNTAX_BExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_<__HOPPER-SYNTAX_BExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_<__HOPPER-SYNTAX_BExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_<=__HOPPER-SYNTAX_BExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_<=__HOPPER-SYNTAX_BExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_/__HOPPER-SYNTAX_AExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_/__HOPPER-SYNTAX_AExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_-__HOPPER-SYNTAX_AExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_-__HOPPER-SYNTAX_AExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_+__HOPPER-SYNTAX_AExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_+__HOPPER-SYNTAX_AExp_AExp_AExp0_" "(" K ")"
  syntax KItem ::= "#freezer_*__HOPPER-SYNTAX_AExp_AExp_AExp1_" "(" K ")"
  syntax KItem ::= "#freezer_*__HOPPER-SYNTAX_AExp_AExp_AExp0_" "(" K ")"
  syntax K
  syntax GeneratedTopCellFragment ::= "project:GeneratedTopCellFragment" "(" K ")" [function() projection()]
  syntax GeneratedTopCellFragment ::= "<generatedTop>-fragment" TCellOpt GeneratedCounterCellOpt "</generatedTop>-fragment" [cellFragment(GeneratedTopCell)]
  syntax GeneratedTopCell ::= "project:GeneratedTopCell" "(" K ")" [function() projection()]
  syntax GeneratedTopCell ::= "initGeneratedTopCell" "(" Map ")" [function() initializer() noThread()]
  syntax GeneratedTopCell ::= "<generatedTop>" TCell GeneratedCounterCell "</generatedTop>" [cell() cellName(generatedTop) format(%2) topcell()]
  syntax GeneratedCounterCellOpt ::= GeneratedCounterCell
  syntax GeneratedCounterCellOpt ::= "project:GeneratedCounterCellOpt" "(" K ")" [function() projection()]
  syntax GeneratedCounterCellOpt ::= "noGeneratedCounterCell" [cellOptAbsent(GeneratedCounterCell)]
  syntax GeneratedCounterCell ::= "project:GeneratedCounterCell" "(" K ")" [function() projection()]
  syntax GeneratedCounterCell ::= "initGeneratedCounterCell" [function() initializer() noThread()]
  syntax GeneratedCounterCell ::= "getGeneratedCounterCell" "(" GeneratedTopCell ")" [function()]
  syntax GeneratedCounterCell ::= "<generatedCounter>" Int "</generatedCounter>" [cell() cellName(generatedCounter) format(%1%i%n%2%d%n%3)]
  syntax Bool ::= "isTCellOpt" "(" K ")" [function() predicate(TCellOpt)]
  syntax Bool ::= "isGeneratedTopCellFragment" "(" K ")" [function() predicate(GeneratedTopCellFragment)]
  syntax Bool ::= "isGeneratedTopCell" "(" K ")" [function() predicate(GeneratedTopCell)]
  syntax Bool ::= "isGeneratedCounterCellOpt" "(" K ")" [function() predicate(GeneratedCounterCellOpt)]
  syntax Bool ::= "isGeneratedCounterCell" "(" K ")" [function() predicate(GeneratedCounterCell)]
  rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule getGeneratedCounterCell(`<generatedTop>`(DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") []
  rule `project:TCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:GeneratedTopCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:GeneratedTopCellFragment`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:GeneratedCounterCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:GeneratedCounterCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezerif(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt1_`(K1,K2)=>`if(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt`(HOLE,K1,K2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(484ba733e4f3d226ccb6532aa135dafb46ca3c1a2041cc13cac868eb78b03240) cool() cool-like() org.kframework.attributes.Location(Location(12,19,12,64)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezerif(_)__HOPPER-SYNTAX_Stmt_BExp_Block1_`(K1)=>`if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(9c9d42b202e6c3ff64967760459d6d7c6a52cc39c4df2d56d85e3a8bc3364873) cool() cool-like() org.kframework.attributes.Location(Location(11,21,11,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block1_`(K1,K2)=>`_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block`(HOLE,K1,K2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(4becf6494c2e046233b38eafe9b48448360adf776fb2048d0734cd7a6ad2c4fb) cool() cool-like() org.kframework.attributes.Location(Location(13,19,13,54)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_>__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)=>`_>__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(b1eebaf34a952e39bc18616c87efbf84d93637472003174640463d0e27e15b17) cool() cool-like() org.kframework.attributes.Location(Location(56,23,56,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_>__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)=>`_>__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(547d75a15a4bb82225319726937e7f35340db00086f065434f40a7d1c700f5d4) cool() cool-like() org.kframework.attributes.Location(Location(56,23,56,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_>=__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)=>`_>=__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(57561fb03482a2eb8b124a00d604dda5513f4316d79079caa2e2605906790231) cool() cool-like() org.kframework.attributes.Location(Location(57,23,57,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_>=__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)=>`_>=__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(a1fff827bb762331a3ed03c0ec845ce131584da2f543b1614e35eb48df12ffc7) cool() cool-like() org.kframework.attributes.Location(Location(57,23,57,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp0_`(K0)=>`_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(3a1ac10647498a41e48643da76544b9c5bd8f9a0e574be69889ef717bd64640e) cool() cool-like() org.kframework.attributes.Location(Location(44,33,44,56)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(2)]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp0_`(K0)=>`_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(46423837b35ece795fc8a1f47e59b3e6025a62e1f72bcba0222dc22cf20a3b64) cool() cool-like() org.kframework.attributes.Location(Location(46,25,46,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(2)]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_<__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)=>`_<__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(107286b99fc54146f51ee1fdb15a850da9183ef2c17d2c1a2bca3d5395f5b53d) cool() cool-like() org.kframework.attributes.Location(Location(54,23,54,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_<__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)=>`_<__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(d2228eec00bcf62744e6ed961c8189428628e9278f37e663b15e03f37ac59d58) cool() cool-like() org.kframework.attributes.Location(Location(54,23,54,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_<=__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)=>`_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(d66e41259064babaf505d8112e54a4917bad99b8f3c5231d3599c52e39f515f8) cool() cool-like() org.kframework.attributes.Location(Location(55,23,55,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_<=__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)=>`_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(38d9dc6f759e052fe771a1171ff7d841fe5477e528cfcf6b6580ea953ab01b19) cool() cool-like() org.kframework.attributes.Location(Location(55,23,55,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_/__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)=>`_/__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(02f39389ec7f0a927d2853fbdfaf6c1111caadbfd44bee5715e6ec1b23e31938) cool() cool-like() org.kframework.attributes.Location(Location(65,25,65,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_/__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)=>`_/__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(788a596a29c1d573e42bff8f5dba28db441378e46bb4bc3c568a722a4edb03e4) cool() cool-like() org.kframework.attributes.Location(Location(65,25,65,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_-__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)=>`_-__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(c8b69f060339b871fc3169a1fe95f0339ebec70fb8492a4e4cbea4bfa828e538) cool() cool-like() org.kframework.attributes.Location(Location(66,19,66,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_-__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)=>`_-__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(58e0d68431ac5c5e45dec67de2a5f4e10b2431f18657beb9c54f42c6a9dac744) cool() cool-like() org.kframework.attributes.Location(Location(66,19,66,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_+__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)=>`_+__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(cb48d2b6bb9340a282f63d76808f23c3e08712a41c66100f62bd81da0c8a271e) cool() cool-like() org.kframework.attributes.Location(Location(67,19,67,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_+__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)=>`_+__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(c9c5bb20724167a07752f4abd38e17f9f6d5e3f3e48f5d65001b2586035375c8) cool() cool-like() org.kframework.attributes.Location(Location(67,19,67,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_*__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)=>`_*__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(ea5361c747d0fcf57cfa6821940a2ebd27c8e886bb39f4ce3c37d0a63eef6174) cool() cool-like() org.kframework.attributes.Location(Location(64,25,64,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(``HOLE~>`#freezer_*__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)=>`_*__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(HOLE)) ensures #token("true","Bool") [UNIQUE_ID(e85b4dcff980a6381cf48b000a66c8bdadc391ea2ed57d3507f826fbcb883434) cool() cool-like() org.kframework.attributes.Location(Location(64,25,64,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `if(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt`(HOLE,K1,K2)=>HOLE~>`#freezerif(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt1_`(K1,K2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5e4eba4fe9239c615e1fea1e246e01fe346cadbd41c3b6fdbdd8e91698a1199c) heat() org.kframework.attributes.Location(Location(12,19,12,64)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(HOLE,K1)=>HOLE~>`#freezerif(_)__HOPPER-SYNTAX_Stmt_BExp_Block1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c38cde352053cbd1f487bc5b2b1c0cb81004df0f6b7ebecf98463e3ce0117452) heat() org.kframework.attributes.Location(Location(11,21,11,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block`(HOLE,K1,K2)=>HOLE~>`#freezer_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block1_`(K1,K2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(958b5de4016138296372d21aa016001cf74fc600b36baaad9c25819aa8a8d5df) heat() org.kframework.attributes.Location(Location(13,19,13,54)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_>__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_>__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c4c6959aad3257dc9f784ba444a25a3648645577151ae76083ba495d30b5f0bb) heat() org.kframework.attributes.Location(Location(56,23,56,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_>__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_>__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f4bfa3e544fb32220f074ec98705c036612f65d0ca9c98ffa8bf1599550ed284) heat() org.kframework.attributes.Location(Location(56,23,56,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_>=__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_>=__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(a4201b7fa12c500a67a872334b5ba201b9c9d4067038d104535319b99a779a0e) heat() org.kframework.attributes.Location(Location(57,23,57,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_>=__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_>=__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e606a56fcf884bd32cbae28370cc77b2115d75d3bc7ead1a16f8bd42e0a169eb) heat() org.kframework.attributes.Location(Location(57,23,57,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(K0,HOLE)=>HOLE~>`#freezer_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(728fa3b10ba8247c6100a536b9964bb8d60f9c1d34ebdcce6869f7fb1cec9b99) heat() org.kframework.attributes.Location(Location(44,33,44,56)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(2)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(K0,HOLE)=>HOLE~>`#freezer_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(579887aad3248555ae1b2d4ae7db82e64e14ec067c5a388c1914be89bd669d7a) heat() org.kframework.attributes.Location(Location(46,25,46,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(2)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_<__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_<__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(43b708c44a84fb1dfbc26f5eabf6f14b047f88755aa65374a846243a0f4b1205) heat() org.kframework.attributes.Location(Location(54,23,54,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_<__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_<__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8ad07fb994b0ab61587665cdc25623b1d9416cd289c51c372a67db6e5da1b98e) heat() org.kframework.attributes.Location(Location(54,23,54,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_<=__HOPPER-SYNTAX_BExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e69c97328a67bf01f1ae8f28045f0b9c7382beb70ce1e0e34de8c213da5ca733) heat() org.kframework.attributes.Location(Location(55,23,55,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_<=__HOPPER-SYNTAX_BExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5b9d3e8747fcc93a50027104973da17cf57aa78c107d32992cb0cbc1e03704e2) heat() org.kframework.attributes.Location(Location(55,23,55,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_/__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_/__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(K0),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f3645f7c20d1d7c97c06042f913b61a9f0191728834a914d264c3441c7034236) heat() org.kframework.attributes.Location(Location(65,25,65,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_/__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_/__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(2a69b766896c09318caea8932123feec4debe2d7ab65e29cbbdf90ca3531baff) heat() org.kframework.attributes.Location(Location(65,25,65,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_-__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_-__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(K0),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4c2248cc913e58a24e1471391dc1c9ca8dad59c9330e8ad19d41a76f6282a428) heat() org.kframework.attributes.Location(Location(66,19,66,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_-__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_-__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e343e71ac706cddc15ea712ee89dde93fb58c8cbfbc42515af92bd220a95629e) heat() org.kframework.attributes.Location(Location(66,19,66,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_+__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_+__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(K0),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(aa00c340437b8fe48758604f23d3ff38bf70b1e0142ac763433900ee27728857) heat() org.kframework.attributes.Location(Location(67,19,67,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_+__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_+__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c5b209889f64b58eec6e48a38ab4a43ebeae1a4f78c25c3be1e17dd795839394) heat() org.kframework.attributes.Location(Location(67,19,67,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_*__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)=>HOLE~>`#freezer_*__HOPPER-SYNTAX_AExp_AExp_AExp0_`(K0)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(K0),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(710df49f66e7b728f397b3a53ec8e87074b90af538519cd0b73ea3844c6466db) heat() org.kframework.attributes.Location(Location(64,25,64,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_*__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)=>HOLE~>`#freezer_*__HOPPER-SYNTAX_AExp_AExp_AExp1_`(K1)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(dd1a462d15b24780f8297cfc3a483fb90106342072ce260090bdbc959f3e752c) heat() org.kframework.attributes.Location(Location(64,25,64,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
endmodule


module HOPPER$SYNTAX [org.kframework.attributes.Location(Location(225,1,230,9)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k))]
  imports HOPPER-SYNTAX$SYNTAX
  imports DOMAINS$SYNTAX
  syntax KResult ::= Int
  syntax KResult ::= Bool
  syntax KResult ::= "project:KResult" "(" K ")" [function() projection()]
  syntax KItem ::= KResult
  syntax K
  syntax Bool ::= "isKResult" "(" K ")" [function() predicate(KResult)]
  rule `project:KResult`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module HOPPER-SYNTAX [org.kframework.attributes.Location(Location(1,1,223,9)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k))]
  imports MAP
  imports HOPPER-SYNTAX$SYNTAX
  imports DOMAINS
  syntax KItem ::= Cell
  syntax K
  syntax Cell ::= ThreadCell
  syntax Cell ::= TempCell
  syntax Cell ::= TCell
  syntax Cell ::= StoreCell
  syntax Cell ::= ScopeCell
  syntax Cell ::= ParamsCell
  syntax Cell ::= LocalEnvCell
  syntax Cell ::= LocCell
  syntax Cell ::= KCell
  syntax Cell ::= IdCell
  syntax Cell ::= FunctionsCell
  syntax Cell ::= EnvCell
  syntax Cell ::= "project:Cell" "(" K ")" [function() projection()]
  syntax Bool ::= "isCell" "(" K ")" [function() predicate(Cell)]
  rule initThreadCell(.KList)=>`<thread>`(initIdCell(.KList),initScopeCell(.KList),initParamsCell(.KList),initTempCell(.KList),initLocalEnvCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTempCell(.KList)=>`<temp>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTCell(Init)=>`<T>`(initKCell(Init),initFunctionsCell(.KList),initEnvCell(.KList),initStoreCell(.KList),initLocCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initScopeCell(.KList)=>`<scope>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initParamsCell(.KList)=>`<params>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initLocalEnvCell(.KList)=>`<localEnv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initLocCell(.KList)=>`<loc>`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initKCell(Init)=>`<k>`(`project:Pgm`(`Map:lookup`(Init,#token("$PGM","KConfigVar")))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initIdCell(.KList)=>`<id>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFunctionsCell(.KList)=>`<functions>`(`.ThreadCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `project:Cell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(``I=>V``~>DotVar2),_0,`<env>`(`_Map_`(`_|->_`(I,L),DotVar3)),`<store>`(`_Map_`(`_|->_`(L,V),DotVar4)),_1),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0389400ab02b42fde0be22606d3e79e24ad00b0d812734905348972217007e97) contentStartColumn(10) contentStartLine(156) cool-like() org.kframework.attributes.Location(Location(156,10,158,41)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `while(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>`if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(`___HOPPER-SYNTAX_Stmt_Stmt_Stmt`(S,`while(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(S)))))``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a94973218fd660629af0181b010db99d00628e80afb584e8e5c04e4187ecd71f) contentStartColumn(10) contentStartLine(90) org.kframework.attributes.Location(Location(90,10,90,65)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `program{_}_HOPPER-SYNTAX_Pgm_Block`(B)=>B``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e56cba153b68b068bd94ea2925795a53ee8053cc6544bbfbf90b70d9917d17f) contentStartColumn(10) contentStartLine(72) org.kframework.attributes.Location(Location(72,10,72,34)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `local(_,_)_HOPPER-SYNTAX_Local_Id_Stmt`(FuncId,`_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(`integer_HOPPER-SYNTAX_Type`(.KList),`_,__HOPPER-SYNTAX_Ids_Id_Ids`(I,`.List{"_,__HOPPER-SYNTAX_Ids_Id_Ids"}_Ids`(.KList))),V))=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),`<functions>`(`_ThreadCellMap_`(`<thread>`(`<id>`(FuncId),_0,_1,_2,`<localEnv>`(Rho=>`_Map_`(Rho,`_|->_`(I,L)))),DotVar3)),DotVar1,`<store>`(SMap=>`_Map_`(SMap,`_|->_`(L,V))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0641b6342308e587b9b4536a4a427f40f0dbb12a5ab8963fe62b87b834e74a0) contentStartColumn(10) contentStartLine(195) org.kframework.attributes.Location(Location(195,10,203,35)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `if(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt`(#token("true","Bool"),`{_}_HOPPER-SYNTAX_Block_Stmt`(B),S)=>B``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3789e76ebafdbebc4a13cf7df792ad5d71dbc8f4ebf0cdf8a83f1ff6ce3badda) contentStartColumn(10) contentStartLine(81) org.kframework.attributes.Location(Location(81,10,81,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `if(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt`(#token("false","Bool"),`{_}_HOPPER-SYNTAX_Block_Stmt`(_0),S)=>S``~>DotVar2),_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22272c012b0d6bb692d3e00b7ba9ac5eb36a505aeed1e8688cc83224fe4d07e9) contentStartColumn(10) contentStartLine(82) org.kframework.attributes.Location(Location(82,10,82,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(#token("true","Bool"),`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>S``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ca48c2ab8f6c54de840e939535c93315d91e858bb4b287c7942996360f8c9a8e) contentStartColumn(10) contentStartLine(79) org.kframework.attributes.Location(Location(79,10,79,35)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(#token("false","Bool"),`{_}_HOPPER-SYNTAX_Block_Stmt`(_0))=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bcb19b1850f3910ebc8e43917191a403f5e751e363187a4239a7fc9967350fb9) contentStartColumn(10) contentStartLine(80) org.kframework.attributes.Location(Location(80,10,80,34)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `function_(_)__HOPPER-SYNTAX_FuncDec_Id_Params_Block`(I,P,`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),`<functions>`(`_ThreadCellMap_`(`.ThreadCellMap`(.KList)=>`<thread>`(`<id>`(I),`<scope>`(S),`<params>`(P),`<temp>`(P),`<localEnv>`(`.Map`(.KList))),DotVar3)),_0,_1,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9489667cedd25bfdf8794406e819c350b5a4421caec75c2dd518c923ba9a8dca) contentStartColumn(10) contentStartLine(164) org.kframework.attributes.Location(Location(164,10,172,10)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `foreach(_in_)__HOPPER-SYNTAX_Foreach_Id_ArrayList_Block`(I,`[_]_HOPPER-SYNTAX_ArrayList_ListValues`(`_,__HOPPER-SYNTAX_ListValues_Int_ListValues`(V,Vs)),`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>S~>`foreach(_in_)__HOPPER-SYNTAX_Foreach_Id_ArrayList_Block`(I,`[_]_HOPPER-SYNTAX_ArrayList_ListValues`(Vs),`{_}_HOPPER-SYNTAX_Block_Stmt`(S))``~>DotVar2),_1,`<env>`(`_Map_`(`_|->_`(I,L),DotVar3)),`<store>`(`_Map_`(`_|->_`(L,_0=>V),DotVar4)),_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(949d965f1d3aaa890793ea8e8afd75580ebf8ed6e50cb30880002c5516440009) contentStartColumn(10) contentStartLine(107) org.kframework.attributes.Location(Location(107,10,113,48)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `foreach(_in_)__HOPPER-SYNTAX_Foreach_Id_ArrayList_Block`(I,`[_]_HOPPER-SYNTAX_ArrayList_ListValues`(`_,__HOPPER-SYNTAX_ListValues_Int_ListValues`(V,Vs)),`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>S~>`foreach(_in_)__HOPPER-SYNTAX_Foreach_Id_ArrayList_Block`(I,`[_]_HOPPER-SYNTAX_ArrayList_ListValues`(Vs),`{_}_HOPPER-SYNTAX_Block_Stmt`(S))``~>DotVar2),DotVar1,`<env>`(MEnv=>`_Map_`(MEnv,`_|->_`(I,L))),`<store>`(MStore=>`_Map_`(MStore,`_|->_`(L,V))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires `notBool_`(`Set:in`(I,`keys(_)_MAP_Set_Map`(MEnv))) ensures #token("true","Bool") [UNIQUE_ID(a67b938a395adc4757ae68550633d148fff0aa095741a3b3b68fa6bd6a13ceb5) contentStartColumn(10) contentStartLine(97) org.kframework.attributes.Location(Location(97,10,105,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `foreach(_in_)__HOPPER-SYNTAX_Foreach_Id_ArrayList_Block`(I,`[_]_HOPPER-SYNTAX_ArrayList_ListValues`(`.List{"_,__HOPPER-SYNTAX_ListValues_Int_ListValues"}_ListValues`(.KList)),B)=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9863a92aa27cf29e8353db2d355a5a67194ab6057c245bc08b60c30493d37a3b) contentStartColumn(10) contentStartLine(115) org.kframework.attributes.Location(Location(115,10,115,60)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `for(__;_;_)__HOPPER-SYNTAX_Stmt_Type_UniqueIdAssigner_BExp_AExpMod_Block`(T,`_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(I,V),B,Amod,`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>`_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,`_,__HOPPER-SYNTAX_Ids_Id_Ids`(I,`.List{"_,__HOPPER-SYNTAX_Ids_Id_Ids"}_Ids`(.KList))),V)~>`while(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(`___HOPPER-SYNTAX_Stmt_Stmt_Stmt`(S,Amod)))``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a2bb95daa34fe50bca7a9cf55cc8a1f4f1203450bf7ac8483cd826cb0012c3c) contentStartColumn(10) contentStartLine(94) org.kframework.attributes.Location(Location(94,10,95,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `else__HOPPER-SYNTAX_ElseIfStmt_Block`(`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>S``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd18f0bb1b69c57219e0b25a8148414c723591a68a746337bdde327e85ddd4dd) contentStartColumn(10) contentStartLine(85) org.kframework.attributes.Location(Location(85,10,85,25)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `elif(_)___HOPPER-SYNTAX_ElseIfStmt_BExp_Block_ElseIfStmt`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(S1),S2)=>`if(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(S1),S2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(067bf95cf60ffcf859d99d18e7681be569e33a7b1b367b71e83577ec7645fa15) contentStartColumn(10) contentStartLine(83) org.kframework.attributes.Location(Location(83,10,83,73)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `elif(_)__HOPPER-SYNTAX_ElseIfStmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(S))=>`if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(S))``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ee9811d1b76f8c5d5c5f512a1058d5ef124ea8ac73ff7f7c5347ea6580cc56cc) contentStartColumn(10) contentStartLine(84) org.kframework.attributes.Location(Location(84,10,84,54)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `do_while(_)_HOPPER-SYNTAX_Stmt_Block_BExp`(`{_}_HOPPER-SYNTAX_Block_Stmt`(S),B)=>S~>`if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(B,`{_}_HOPPER-SYNTAX_Block_Stmt`(`do_while(_)_HOPPER-SYNTAX_Stmt_Block_BExp`(`{_}_HOPPER-SYNTAX_Block_Stmt`(S),B)))``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1ee8c80f1fbe10a90e134c5ac71442df1c9c7c1b3c8dcb78984772171e9aaf0a) contentStartColumn(10) contentStartLine(92) org.kframework.attributes.Location(Location(92,10,92,74)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `___HOPPER-SYNTAX_Stmt_Stmt_Stmt`(S1,S2)=>S1~>S2``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(54ed00164a1828a42e1f925d5c8caeaed0e2a1628e73e9cb3b2754c96004d460) contentStartColumn(10) contentStartLine(74) org.kframework.attributes.Location(Location(74,10,74,37)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block`(#token("true","Bool"),B,_0)=>B``~>DotVar2),_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7661f155d07bb0ec6808a51d780799b0bb3346dc89b703a9acfce9472e74eb49) contentStartColumn(10) contentStartLine(87) org.kframework.attributes.Location(Location(87,10,87,33)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block`(#token("false","Bool"),_0,B)=>B``~>DotVar2),_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(314316a2d328be623ee63b74294d551bd399ff3e6ea919bcc807322b87b3e22b) contentStartColumn(10) contentStartLine(88) org.kframework.attributes.Location(Location(88,10,88,34)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_>__HOPPER-SYNTAX_BExp_AExp_AExp`(I1,I2)=>`_>Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(86c5ae33b1016ba7c1a6384f20d59a902c5615dfa404d1f789bbe372b4de26ad) contentStartColumn(10) contentStartLine(123) org.kframework.attributes.Location(Location(123,10,123,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(I1,I2)=>`_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(I1,V)``~>DotVar2),_0,`<env>`(`_Map_`(`_|->_`(I2,L),DotVar3)),`<store>`(`_Map_`(`_|->_`(L,V),DotVar4)),_1),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc5846929de082c1b94e91849e1b04e8cb984e47a3103ceaed77d8b57cedcd6d) contentStartColumn(10) contentStartLine(152) org.kframework.attributes.Location(Location(152,10,154,42)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(I,V)=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),_1,`<env>`(`_Map_`(`_|->_`(I,L),DotVar3)),`<store>`(`_Map_`(`_|->_`(L,_0=>V),DotVar4)),_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df20a5bf1d0b3ec0b6d82c750d57a4a5acbdc8d3337005f87930ecb877191db5) contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,150,48)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(`integer_HOPPER-SYNTAX_Type`(.KList),`_,__HOPPER-SYNTAX_Ids_Id_Ids`(I,`.List{"_,__HOPPER-SYNTAX_Ids_Id_Ids"}_Ids`(.KList))),V)=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),DotVar1,`<env>`(MEnv=>`_Map_`(MEnv,`_|->_`(I,L))),`<store>`(MStore=>`_Map_`(MStore,`_|->_`(L,V))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c452afcb9afcef67478944359fad0bb9b005858e2286c69f632ab6bf3e52e742) contentStartColumn(10) contentStartLine(143) org.kframework.attributes.Location(Location(143,10,146,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,`_,__HOPPER-SYNTAX_Ids_Id_Ids`(I,Xs)),V)=>`_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,Xs),V)``~>DotVar2),DotVar1,`<env>`(MEnv=>`_Map_`(MEnv,`_|->_`(I,L))),`<store>`(MStore=>`_Map_`(MStore,`_|->_`(L,V))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(369485237748fdeec148d3763d152c208c4bc8d4fcb3a6522caf28c70989c4c8) contentStartColumn(10) contentStartLine(135) org.kframework.attributes.Location(Location(135,10,138,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,`.List{"_,__HOPPER-SYNTAX_Ids_Id_Ids"}_Ids`(.KList)),_0)=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f197debac6df8663af085726728cc145b66f588f98152d0818887e695b6a3a1a) contentStartColumn(10) contentStartLine(141) org.kframework.attributes.Location(Location(141,10,141,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_<__HOPPER-SYNTAX_BExp_AExp_AExp`(I1,I2)=>`_<Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(196dd589cd26998c84bd751ac5554650171d13d39e7db698092e7f67ee00eca2) contentStartColumn(10) contentStartLine(121) org.kframework.attributes.Location(Location(121,10,121,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(I1,I2)=>`_<=Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b2135bee400b5745332e18786dbc27a5f52d55d13eb124ebc5ea641cd1808e6) contentStartColumn(10) contentStartLine(122) org.kframework.attributes.Location(Location(122,10,122,41)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_;_HOPPER-SYNTAX_Stmt_FuncCall`(`_(_)_HOPPER-SYNTAX_FuncCall_Id_Values`(I,`_,__HOPPER-SYNTAX_Values_Int_Values`(V,Vs)))=>`_;_HOPPER-SYNTAX_Stmt_FuncCall`(`_(_)_HOPPER-SYNTAX_FuncCall_Id_Values`(I,Vs))``~>DotVar2),`<functions>`(`_ThreadCellMap_`(`<thread>`(`<id>`(I),_0,_1,`<temp>`(`_,__HOPPER-SYNTAX_Params_Id_Params`(P,Ps)=>Ps),`<localEnv>`(Rho=>`_Map_`(Rho,`_|->_`(P,L)))),DotVar3)),DotVar1,`<store>`(SMap=>`_Map_`(SMap,`_|->_`(L,V))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e7fccac358035b9015518c51b1dc4f737e37985cfc5c1bdfb4fa379bb7e6f72d) contentStartColumn(10) contentStartLine(184) org.kframework.attributes.Location(Location(184,10,193,35)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_;_HOPPER-SYNTAX_Stmt_FuncCall`(`_(_)_HOPPER-SYNTAX_FuncCall_Id_Values`(I,`.List{"_,__HOPPER-SYNTAX_Values_Int_Values"}_Values`(.KList)))=>`local(_,_)_HOPPER-SYNTAX_Local_Id_Stmt`(I,S)``~>DotVar2),`<functions>`(`_ThreadCellMap_`(`<thread>`(`<id>`(I),`<scope>`(S),`<params>`(P),`<temp>`(`.List{"_,__HOPPER-SYNTAX_Params_Id_Params"}_Params`(.KList)=>P),DotVar4),DotVar3)),_0,_1,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e4cd71a1a2b6b3643ad7b2326c5b4a710d4825ace5853798c5fa7bcaedb3010) contentStartColumn(10) contentStartLine(174) org.kframework.attributes.Location(Location(174,10,182,18)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_;_HOPPER-SYNTAX_Stmt_DecVar`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,`_,__HOPPER-SYNTAX_Ids_Id_Ids`(I,`.List{"_,__HOPPER-SYNTAX_Ids_Id_Ids"}_Ids`(.KList))))=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),DotVar1,`<env>`(MEnv=>`_Map_`(MEnv,`_|->_`(I,L))),`<store>`(MStore=>`_Map_`(MStore,`_|->_`(L,#token("0","Int")))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b60a9128d3b5eea223dacf3522a743ca0bcd3b0ccf2f0b5910eda1cd9a9d364b) contentStartColumn(10) contentStartLine(125) org.kframework.attributes.Location(Location(125,10,128,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_;_HOPPER-SYNTAX_Stmt_DecVar`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,`_,__HOPPER-SYNTAX_Ids_Id_Ids`(I,Xs)))=>`_;_HOPPER-SYNTAX_Stmt_DecVar`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,Xs))``~>DotVar2),DotVar1,`<env>`(MEnv=>`_Map_`(MEnv,`_|->_`(I,L))),`<store>`(MStore=>`_Map_`(MStore,`_|->_`(L,#token("0","Int")))),`<loc>`(L=>`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e0a866ae051a5f1de70d5b714084f3236e7f088b1caa355afac6331c5881337) contentStartColumn(10) contentStartLine(130) org.kframework.attributes.Location(Location(130,10,133,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_;_HOPPER-SYNTAX_Stmt_DecVar`(`___HOPPER-SYNTAX_DecVar_Type_Ids`(T,`.List{"_,__HOPPER-SYNTAX_Ids_Id_Ids"}_Ids`(.KList)))=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fec5809b0ef41b82bd13dc8415d29fc6d1295617c128e45db27079550e295312) contentStartColumn(10) contentStartLine(140) org.kframework.attributes.Location(Location(140,10,140,31)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_/__HOPPER-SYNTAX_AExp_AExp_AExp`(I1,I2)=>`_/Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a73ca54e20c1547cb2a7898fc0adec03dda5c9b9d317c087d43bfbe474905561) contentStartColumn(10) contentStartLine(120) org.kframework.attributes.Location(Location(120,10,120,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_-__HOPPER-SYNTAX_AExp_AExp_AExp`(I1,I2)=>`_-Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db590263f5f54aec008bcfafd4718c998f0b1f21b50fb1edfb9d41fe7ce304b1) contentStartColumn(10) contentStartLine(118) org.kframework.attributes.Location(Location(118,10,118,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_+__HOPPER-SYNTAX_AExp_AExp_AExp`(I1,I2)=>`_+Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6612d06a819d1f339fae8faf6bfd122681f648bb24810174bf8baabacb7a7668) contentStartColumn(10) contentStartLine(117) org.kframework.attributes.Location(Location(117,10,117,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_++_HOPPER-SYNTAX_AExpMod_Id`(I)=>`Skip_HOPPER-SYNTAX_Skip`(.KList)``~>DotVar2),_0,`<env>`(`_Map_`(`_|->_`(I,L),DotVar3)),`<store>`(`_Map_`(`_|->_`(L,V=>`_+Int_`(V,#token("1","Int"))),DotVar4)),_1),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(626592b281eae2add8d711dd3bf68d45e48a7ca55654aca8e6832c22f21415fe) contentStartColumn(10) contentStartLine(160) org.kframework.attributes.Location(Location(160,10,162,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `_*__HOPPER-SYNTAX_AExp_AExp_AExp`(I1,I2)=>`_*Int_`(I1,I2)``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75227866bd40e558186ce540fe0cb876ab0865b35c689a8010e3ed3b26c1af79) contentStartColumn(10) contentStartLine(119) org.kframework.attributes.Location(Location(119,10,119,39)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `Skip_HOPPER-SYNTAX_Skip`(.KList)=>.K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(773de97431f6c64e7aeb4f5abdc7bbc10c7c67c28613637825588b5c0bada588) contentStartColumn(10) contentStartLine(77) org.kframework.attributes.Location(Location(77,10,77,19)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment(rule local(I:Id, S1:Stmt S2:Stmt) => local(I, S1) ~> local(I, S2) [structural],[org.kframework.attributes.Location(Location(75,5,75,85)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k))])
endmodule


module HOPPER-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1,1,223,9)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k))]
  imports MAP$SYNTAX
  imports DOMAINS$SYNTAX
  syntax priority  > _*__HOPPER-SYNTAX_AExp_AExp_AExp > _/__HOPPER-SYNTAX_AExp_AExp_AExp _-__HOPPER-SYNTAX_AExp_AExp_AExp _+__HOPPER-SYNTAX_AExp_AExp_AExp
  syntax associativity left ___HOPPER-SYNTAX_Stmt_Stmt_Stmt
  syntax associativity left _/__HOPPER-SYNTAX_AExp_AExp_AExp _-__HOPPER-SYNTAX_AExp_AExp_AExp _+__HOPPER-SYNTAX_AExp_AExp_AExp
  syntax associativity left _*__HOPPER-SYNTAX_AExp_AExp_AExp
  syntax Values ::= Int "," Values [right() userList(*)]
  syntax Values ::= "project:Values" "(" K ")" [function() projection()]
  syntax Values ::= ".Values" [klabel(.List{"_,__HOPPER-SYNTAX"}) userList(*)]
  syntax UniqueIdAssigner ::= Id "=" AExp [strict(2)]
  syntax UniqueIdAssigner ::= "project:UniqueIdAssigner" "(" K ")" [function() projection()]
  syntax Type ::= "project:Type" "(" K ")" [function() projection()]
  syntax Type ::= "integer"
  syntax Type ::= "boolean"
  syntax ThreadCellMap [hook(MAP.Map)]
  syntax ThreadCellMap ::= ThreadCellMap ThreadCellMap [assoc() avoid() cellCollection() comm() element(ThreadCellMapItem) function() hook(MAP.concat) unit(.ThreadCellMap) wrapElement(<thread>)]
  syntax ThreadCellMap ::= ThreadCell
  syntax ThreadCellMap ::= "project:ThreadCellMap" "(" K ")" [function() projection()]
  syntax ThreadCellMap ::= "initThreadCell" [function() initializer() noThread()]
  syntax ThreadCellMap ::= "ThreadCellMapItem" "(" IdCell "," ThreadCell ")" [format(%5) function() hook(MAP.element)]
  syntax ThreadCellMap ::= ".ThreadCellMap" [function() hook(MAP.unit)]
  syntax ThreadCellFragment ::= "project:ThreadCellFragment" "(" K ")" [function() projection()]
  syntax ThreadCellFragment ::= "<thread>-fragment" IdCellOpt ScopeCellOpt ParamsCellOpt TempCellOpt LocalEnvCellOpt "</thread>-fragment" [cellFragment(ThreadCell)]
  syntax ThreadCell ::= "project:ThreadCell" "(" K ")" [function() projection()]
  syntax ThreadCell ::= "<thread>" IdCell ScopeCell ParamsCell TempCell LocalEnvCell "</thread>" [cell() cellName(thread) color(blue) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7) multiplicity(*) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) type(Map)]
  syntax TempCellOpt ::= TempCell
  syntax TempCellOpt ::= "project:TempCellOpt" "(" K ")" [function() projection()]
  syntax TempCellOpt ::= "noTempCell" [cellOptAbsent(TempCell)]
  syntax TempCell ::= "project:TempCell" "(" K ")" [function() projection()]
  syntax TempCell ::= "initTempCell" [function() initializer() noThread()]
  syntax TempCell ::= "<temp>" K "</temp>" [cell() cellName(temp) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TCellFragment ::= "project:TCellFragment" "(" K ")" [function() projection()]
  syntax TCellFragment ::= "<T>-fragment" KCellOpt FunctionsCellOpt EnvCellOpt StoreCellOpt LocCellOpt "</T>-fragment" [cellFragment(TCell)]
  syntax TCell ::= "project:TCell" "(" K ")" [function() projection()]
  syntax TCell ::= "initTCell" "(" Map ")" [function() initializer() noThread()]
  syntax TCell ::= "<T>" KCell FunctionsCell EnvCell StoreCell LocCell "</T>" [cell() cellName(T) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  syntax StoreCellOpt ::= StoreCell
  syntax StoreCellOpt ::= "project:StoreCellOpt" "(" K ")" [function() projection()]
  syntax StoreCellOpt ::= "noStoreCell" [cellOptAbsent(StoreCell)]
  syntax StoreCell ::= "project:StoreCell" "(" K ")" [function() projection()]
  syntax StoreCell ::= "initStoreCell" [function() initializer() noThread()]
  syntax StoreCell ::= "<store>" Map "</store>" [cell() cellName(store) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Stmt ::= Stmt Stmt [left()]
  syntax Stmt ::= Skip
  syntax Stmt ::= FuncDec
  syntax Stmt ::= FuncCall ";"
  syntax Stmt ::= Foreach
  syntax Stmt ::= DecVar ";"
  syntax Stmt ::= BExp "?" Block ":" Block [strict(1)]
  syntax Stmt ::= Assigner
  syntax Stmt ::= AExpMod
  syntax Stmt ::= AExp
  syntax Stmt ::= "while" "(" BExp ")" Block
  syntax Stmt ::= "project:Stmt" "(" K ")" [function() projection()]
  syntax Stmt ::= "if" "(" BExp ")" Block [strict(1)]
  syntax Stmt ::= "if" "(" BExp ")" Block ElseIfStmt [strict(1)]
  syntax Stmt ::= "for" "(" Type UniqueIdAssigner ";" BExp ";" AExpMod ")" Block
  syntax Stmt ::= "do" Block "while" "(" BExp ")"
  syntax Skip ::= "project:Skip" "(" K ")" [function() projection()]
  syntax Skip ::= "Skip"
  syntax ScopeCellOpt ::= ScopeCell
  syntax ScopeCellOpt ::= "project:ScopeCellOpt" "(" K ")" [function() projection()]
  syntax ScopeCellOpt ::= "noScopeCell" [cellOptAbsent(ScopeCell)]
  syntax ScopeCell ::= "project:ScopeCell" "(" K ")" [function() projection()]
  syntax ScopeCell ::= "initScopeCell" [function() initializer() noThread()]
  syntax ScopeCell ::= "<scope>" K "</scope>" [cell() cellName(scope) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Pgm ::= "project:Pgm" "(" K ")" [function() projection()]
  syntax Pgm ::= "program" "{" Block "}"
  syntax ParamsCellOpt ::= ParamsCell
  syntax ParamsCellOpt ::= "project:ParamsCellOpt" "(" K ")" [function() projection()]
  syntax ParamsCellOpt ::= "noParamsCell" [cellOptAbsent(ParamsCell)]
  syntax ParamsCell ::= "project:ParamsCell" "(" K ")" [function() projection()]
  syntax ParamsCell ::= "initParamsCell" [function() initializer() noThread()]
  syntax ParamsCell ::= "<params>" K "</params>" [cell() cellName(params) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Params ::= Id "," Params [right() userList(*)]
  syntax Params ::= "project:Params" "(" K ")" [function() projection()]
  syntax Params ::= ".Params" [klabel(.List{"_,__HOPPER-SYNTAX"}) userList(*)]
  syntax LocalEnvCellOpt ::= LocalEnvCell
  syntax LocalEnvCellOpt ::= "project:LocalEnvCellOpt" "(" K ")" [function() projection()]
  syntax LocalEnvCellOpt ::= "noLocalEnvCell" [cellOptAbsent(LocalEnvCell)]
  syntax LocalEnvCell ::= "project:LocalEnvCell" "(" K ")" [function() projection()]
  syntax LocalEnvCell ::= "initLocalEnvCell" [function() initializer() noThread()]
  syntax LocalEnvCell ::= "<localEnv>" Map "</localEnv>" [cell() cellName(localEnv) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Local ::= "project:Local" "(" K ")" [function() projection()]
  syntax Local ::= "local" "(" Id "," Stmt ")"
  syntax LocCellOpt ::= LocCell
  syntax LocCellOpt ::= "project:LocCellOpt" "(" K ")" [function() projection()]
  syntax LocCellOpt ::= "noLocCell" [cellOptAbsent(LocCell)]
  syntax LocCell ::= "project:LocCell" "(" K ")" [function() projection()]
  syntax LocCell ::= "initLocCell" [function() initializer() noThread()]
  syntax LocCell ::= "<loc>" Int "</loc>" [cell() cellName(loc) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ListValues ::= Int "," ListValues [right() userList(*)]
  syntax ListValues ::= "project:ListValues" "(" K ")" [function() projection()]
  syntax ListValues ::= ".ListValues" [klabel(.List{"_,__HOPPER-SYNTAX"}) userList(*)]
  syntax KItem ::= Values
  syntax KItem ::= UniqueIdAssigner
  syntax KItem ::= Type
  syntax KItem ::= ThreadCellMap
  syntax KItem ::= ThreadCellFragment
  syntax KItem ::= ThreadCell
  syntax KItem ::= TempCellOpt
  syntax KItem ::= TempCell
  syntax KItem ::= TCellFragment
  syntax KItem ::= TCell
  syntax KItem ::= StoreCellOpt
  syntax KItem ::= StoreCell
  syntax KItem ::= Stmt
  syntax KItem ::= Skip
  syntax KItem ::= ScopeCellOpt
  syntax KItem ::= ScopeCell
  syntax KItem ::= Pgm
  syntax KItem ::= ParamsCellOpt
  syntax KItem ::= ParamsCell
  syntax KItem ::= Params
  syntax KItem ::= LocalEnvCellOpt
  syntax KItem ::= LocalEnvCell
  syntax KItem ::= Local
  syntax KItem ::= LocCellOpt
  syntax KItem ::= LocCell
  syntax KItem ::= ListValues
  syntax KItem ::= KCellOpt
  syntax KItem ::= KCell
  syntax KItem ::= Ids
  syntax KItem ::= IdCellOpt
  syntax KItem ::= IdCell
  syntax KItem ::= FunctionsCellOpt
  syntax KItem ::= FunctionsCellFragment
  syntax KItem ::= FunctionsCell
  syntax KItem ::= FuncDec
  syntax KItem ::= FuncCall
  syntax KItem ::= Foreach
  syntax KItem ::= EnvCellOpt
  syntax KItem ::= EnvCell
  syntax KItem ::= ElseIfStmt
  syntax KItem ::= DecVar
  syntax KItem ::= Block
  syntax KItem ::= BExp
  syntax KItem ::= Assigner
  syntax KItem ::= ArrayList
  syntax KItem ::= AExpMod
  syntax KItem ::= AExp
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "project:KCellOpt" "(" K ")" [function() projection()]
  syntax KCellOpt ::= "noKCell" [cellOptAbsent(KCell)]
  syntax KCell ::= "project:KCell" "(" K ")" [function() projection()]
  syntax KCell ::= "initKCell" "(" Map ")" [function() initializer() noThread()]
  syntax KCell ::= "<k>" K "</k>" [cell() cellName(k) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) maincell() org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax K
  syntax Ids ::= Id "," Ids [right() userList(*)]
  syntax Ids ::= "project:Ids" "(" K ")" [function() projection()]
  syntax Ids ::= ".Ids" [klabel(.List{"_,__HOPPER-SYNTAX"}) userList(*)]
  syntax IdCellOpt ::= IdCell
  syntax IdCellOpt ::= "project:IdCellOpt" "(" K ")" [function() projection()]
  syntax IdCellOpt ::= "noIdCell" [cellOptAbsent(IdCell)]
  syntax IdCell ::= "project:IdCell" "(" K ")" [function() projection()]
  syntax IdCell ::= "initIdCell" [function() initializer() noThread()]
  syntax IdCell ::= "<id>" K "</id>" [cell() cellName(id) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FunctionsCellOpt ::= FunctionsCell
  syntax FunctionsCellOpt ::= "project:FunctionsCellOpt" "(" K ")" [function() projection()]
  syntax FunctionsCellOpt ::= "noFunctionsCell" [cellOptAbsent(FunctionsCell)]
  syntax FunctionsCellFragment ::= "project:FunctionsCellFragment" "(" K ")" [function() projection()]
  syntax FunctionsCellFragment ::= "<functions>-fragment" ThreadCellMap "</functions>-fragment" [cellFragment(FunctionsCell)]
  syntax FunctionsCell ::= "project:FunctionsCell" "(" K ")" [function() projection()]
  syntax FunctionsCell ::= "initFunctionsCell" [function() initializer() noThread()]
  syntax FunctionsCell ::= "<functions>" ThreadCellMap "</functions>" [cell() cellName(functions) color(orange) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FuncDec ::= "project:FuncDec" "(" K ")" [function() projection()]
  syntax FuncDec ::= "function" Id "(" Params ")" Block
  syntax FuncCall ::= Id "(" Values ")"
  syntax FuncCall ::= "project:FuncCall" "(" K ")" [function() projection()]
  syntax Foreach ::= "project:Foreach" "(" K ")" [function() projection()]
  syntax Foreach ::= "foreach" "(" Id "in" ArrayList ")" Block
  syntax EnvCellOpt ::= EnvCell
  syntax EnvCellOpt ::= "project:EnvCellOpt" "(" K ")" [function() projection()]
  syntax EnvCellOpt ::= "noEnvCell" [cellOptAbsent(EnvCell)]
  syntax EnvCell ::= "project:EnvCell" "(" K ")" [function() projection()]
  syntax EnvCell ::= "initEnvCell" [function() initializer() noThread()]
  syntax EnvCell ::= "<env>" Map "</env>" [cell() cellName(env) contentStartColumn(19) contentStartLine(207) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ElseIfStmt ::= "project:ElseIfStmt" "(" K ")" [function() projection()]
  syntax ElseIfStmt ::= "else" Block
  syntax ElseIfStmt ::= "elif" "(" BExp ")" Block ElseIfStmt
  syntax ElseIfStmt ::= "elif" "(" BExp ")" Block
  syntax DecVar ::= Type Ids
  syntax DecVar ::= "project:DecVar" "(" K ")" [function() projection()]
  syntax Bool ::= "isValues" "(" K ")" [function() predicate(Values)]
  syntax Bool ::= "isUniqueIdAssigner" "(" K ")" [function() predicate(UniqueIdAssigner)]
  syntax Bool ::= "isType" "(" K ")" [function() predicate(Type)]
  syntax Bool ::= "isThreadCellMap" "(" K ")" [function() predicate(ThreadCellMap)]
  syntax Bool ::= "isThreadCellFragment" "(" K ")" [function() predicate(ThreadCellFragment)]
  syntax Bool ::= "isThreadCell" "(" K ")" [function() predicate(ThreadCell)]
  syntax Bool ::= "isTempCellOpt" "(" K ")" [function() predicate(TempCellOpt)]
  syntax Bool ::= "isTempCell" "(" K ")" [function() predicate(TempCell)]
  syntax Bool ::= "isTCellFragment" "(" K ")" [function() predicate(TCellFragment)]
  syntax Bool ::= "isTCell" "(" K ")" [function() predicate(TCell)]
  syntax Bool ::= "isStoreCellOpt" "(" K ")" [function() predicate(StoreCellOpt)]
  syntax Bool ::= "isStoreCell" "(" K ")" [function() predicate(StoreCell)]
  syntax Bool ::= "isStmt" "(" K ")" [function() predicate(Stmt)]
  syntax Bool ::= "isSkip" "(" K ")" [function() predicate(Skip)]
  syntax Bool ::= "isScopeCellOpt" "(" K ")" [function() predicate(ScopeCellOpt)]
  syntax Bool ::= "isScopeCell" "(" K ")" [function() predicate(ScopeCell)]
  syntax Bool ::= "isPgm" "(" K ")" [function() predicate(Pgm)]
  syntax Bool ::= "isParamsCellOpt" "(" K ")" [function() predicate(ParamsCellOpt)]
  syntax Bool ::= "isParamsCell" "(" K ")" [function() predicate(ParamsCell)]
  syntax Bool ::= "isParams" "(" K ")" [function() predicate(Params)]
  syntax Bool ::= "isLocalEnvCellOpt" "(" K ")" [function() predicate(LocalEnvCellOpt)]
  syntax Bool ::= "isLocalEnvCell" "(" K ")" [function() predicate(LocalEnvCell)]
  syntax Bool ::= "isLocal" "(" K ")" [function() predicate(Local)]
  syntax Bool ::= "isLocCellOpt" "(" K ")" [function() predicate(LocCellOpt)]
  syntax Bool ::= "isLocCell" "(" K ")" [function() predicate(LocCell)]
  syntax Bool ::= "isListValues" "(" K ")" [function() predicate(ListValues)]
  syntax Bool ::= "isKCellOpt" "(" K ")" [function() predicate(KCellOpt)]
  syntax Bool ::= "isKCell" "(" K ")" [function() predicate(KCell)]
  syntax Bool ::= "isIds" "(" K ")" [function() predicate(Ids)]
  syntax Bool ::= "isIdCellOpt" "(" K ")" [function() predicate(IdCellOpt)]
  syntax Bool ::= "isIdCell" "(" K ")" [function() predicate(IdCell)]
  syntax Bool ::= "isFunctionsCellOpt" "(" K ")" [function() predicate(FunctionsCellOpt)]
  syntax Bool ::= "isFunctionsCellFragment" "(" K ")" [function() predicate(FunctionsCellFragment)]
  syntax Bool ::= "isFunctionsCell" "(" K ")" [function() predicate(FunctionsCell)]
  syntax Bool ::= "isFuncDec" "(" K ")" [function() predicate(FuncDec)]
  syntax Bool ::= "isFuncCall" "(" K ")" [function() predicate(FuncCall)]
  syntax Bool ::= "isForeach" "(" K ")" [function() predicate(Foreach)]
  syntax Bool ::= "isEnvCellOpt" "(" K ")" [function() predicate(EnvCellOpt)]
  syntax Bool ::= "isEnvCell" "(" K ")" [function() predicate(EnvCell)]
  syntax Bool ::= "isElseIfStmt" "(" K ")" [function() predicate(ElseIfStmt)]
  syntax Bool ::= "isDecVar" "(" K ")" [function() predicate(DecVar)]
  syntax Bool ::= "isBlock" "(" K ")" [function() predicate(Block)]
  syntax Bool ::= "isBExp" "(" K ")" [function() predicate(BExp)]
  syntax Bool ::= "isAssigner" "(" K ")" [function() predicate(Assigner)]
  syntax Bool ::= "isArrayList" "(" K ")" [function() predicate(ArrayList)]
  syntax Bool ::= "isAExpMod" "(" K ")" [function() predicate(AExpMod)]
  syntax Bool ::= "isAExp" "(" K ")" [function() predicate(AExp)]
  syntax Block ::= Stmt
  syntax Block ::= "{" Stmt "}"
  syntax Block ::= "project:Block" "(" K ")" [function() projection()]
  syntax BExp ::= Bool
  syntax BExp ::= AExp ">=" AExp [strict()]
  syntax BExp ::= AExp ">" AExp [strict()]
  syntax BExp ::= AExp "<=" AExp [strict()]
  syntax BExp ::= AExp "<" AExp [strict()]
  syntax BExp ::= "project:BExp" "(" K ")" [function() projection()]
  syntax BExp ::= "(" BExp ")" [bracket()]
  syntax Assigner ::= UniqueIdAssigner
  syntax Assigner ::= DecVar "=" AExp ";" [strict(2)]
  syntax Assigner ::= "project:Assigner" "(" K ")" [function() projection()]
  syntax ArrayList ::= "project:ArrayList" "(" K ")" [function() projection()]
  syntax ArrayList ::= "[" ListValues "]"
  syntax AExpMod ::= Id "++"
  syntax AExpMod ::= "project:AExpMod" "(" K ")" [function() projection()]
  syntax AExp ::= Int
  syntax AExp ::= Id
  syntax AExp ::= AExp "/" AExp [seqstrict()]
  syntax AExp ::= AExp "-" AExp [seqstrict()]
  syntax AExp ::= AExp "+" AExp [seqstrict()]
  syntax AExp ::= AExp "*" AExp [seqstrict()]
  syntax AExp ::= "project:AExp" "(" K ")" [function() projection()]
  syntax AExp ::= "(" AExp ")" [bracket()]
  rule `project:Values`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:UniqueIdAssigner`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Type`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ThreadCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ThreadCellMap`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ThreadCellFragment`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:TempCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:TempCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:TCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:TCellFragment`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:StoreCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:StoreCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Stmt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Skip`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ScopeCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ScopeCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Pgm`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Params`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ParamsCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ParamsCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Local`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:LocalEnvCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:LocalEnvCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:LocCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:LocCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ListValues`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:KCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:KCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Ids`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:IdCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:IdCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:FunctionsCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:FunctionsCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:FunctionsCellFragment`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:FuncDec`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:FuncCall`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Foreach`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:EnvCell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:EnvCellOpt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ElseIfStmt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:DecVar`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Block`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:BExp`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Assigner`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:ArrayList`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:AExp`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:AExpMod`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  context `<generatedTop>`(`<T>`(`<k>`(`if(_)___HOPPER-SYNTAX_Stmt_BExp_Block_ElseIfStmt`(HOLE,K1,K2)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(12,19,12,64)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  context `<generatedTop>`(`<T>`(`<k>`(`if(_)__HOPPER-SYNTAX_Stmt_BExp_Block`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(11,21,11,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  context `<generatedTop>`(`<T>`(`<k>`(`_?_:__HOPPER-SYNTAX_Stmt_BExp_Block_Block`(HOLE,K1,K2)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(13,19,13,54)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(1)]
  context `<generatedTop>`(`<T>`(`<k>`(`_>__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(56,23,56,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_>__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(56,23,56,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_>=__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(57,23,57,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_>=__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(57,23,57,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_=__HOPPER-SYNTAX_UniqueIdAssigner_Id_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(44,33,44,56)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(2)]
  context `<generatedTop>`(`<T>`(`<k>`(`_=_;_HOPPER-SYNTAX_Assigner_DecVar_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(46,25,46,55)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict(2)]
  context `<generatedTop>`(`<T>`(`<k>`(`_<__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(54,23,54,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_<__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(54,23,54,44)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(55,23,55,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_<=__HOPPER-SYNTAX_BExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(55,23,55,45)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) strict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_/__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(isKResult(K0),#token("true","Bool")) [org.kframework.attributes.Location(Location(65,25,65,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_/__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(65,25,65,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_-__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(isKResult(K0),#token("true","Bool")) [org.kframework.attributes.Location(Location(66,19,66,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_-__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(66,19,66,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_+__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(isKResult(K0),#token("true","Bool")) [org.kframework.attributes.Location(Location(67,19,67,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_+__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(67,19,67,43)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_*__HOPPER-SYNTAX_AExp_AExp_AExp`(K0,HOLE)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(isKResult(K0),#token("true","Bool")) [org.kframework.attributes.Location(Location(64,25,64,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  context `<generatedTop>`(`<T>`(`<k>`(`_*__HOPPER-SYNTAX_AExp_AExp_AExp`(HOLE,K1)~>DotVar2),_0,_1,_2,_3),DotVar0) requires `_andBool_`(#token("true","Bool"),#token("true","Bool")) [org.kframework.attributes.Location(Location(64,25,64,49)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k)) seqstrict()]
  Bubble(config,<T>
        <k> $PGM:Pgm </k>
        <functions color="orange">
            <thread multiplicity="*" color="blue" type="Map">
                <id> .K </id>
                <scope> .K </scope>
                <params> .K </params>
                <temp> .K </temp>
                <localEnv> .Map </localEnv>
            </thread>
        </functions>
        <env> .Map </env>
        <store> .Map </store>
        <loc> 1 </loc>
    </T>,[contentStartColumn(19) contentStartLine(207) org.kframework.attributes.Location(Location(207,5,221,8)) org.kframework.attributes.Source(Source(/\workspace/prof/./hopper.k))])
endmodule


module ID [org.kframework.attributes.Location(Location(833,1,839,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING
  imports ID-SYNTAX
  imports ID$SYNTAX
  rule `freshId(_)_ID-SYNTAX_Id_Int`(I)=>`String2Id(_)_ID-SYNTAX_Id_String`(`_+String__STRING_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a9b9b8184277146c09eab2a3b04c692bacf9ab5bb4505273f0b73df25d23d2a) contentStartColumn(8) contentStartLine(838) org.kframework.attributes.Location(Location(838,8,838,62)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module ID$SYNTAX [org.kframework.attributes.Location(Location(833,1,839,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-PROGRAM-PARSING [org.kframework.attributes.Location(Location(815,1,820,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports ID-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module ID-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(815,1,820,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax KItem ::= Id
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [prec(1) token()]
  syntax Id ::= #UpperId [token()]
  syntax Id ::= #LowerId [token()]
  syntax Id ::= "project:Id" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isId" "(" K ")" [function() predicate(Id)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Id`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module ID-SYNTAX [org.kframework.attributes.Location(Location(822,1,831,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-SYNTAX [org.kframework.attributes.Location(Location(822,1,831,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(822,1,831,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports INT-SYNTAX$SYNTAX
  syntax String ::= "Id2String" "(" Id ")" [function() functional() hook(STRING.token2string) klabel(Id2String)]
  syntax KItem ::= Id
  syntax K
  syntax Id [org.kframework.attributes.Location(Location(826,3,826,19)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) token()]
  syntax Id ::= "project:Id" "(" K ")" [function() projection()]
  syntax Id ::= "freshId" "(" Int ")" [freshGenerator() function() functional() klabel(freshId)]
  syntax Id ::= "String2Id" "(" String ")" [function() functional() hook(STRING.string2token) klabel(String2Id)]
  syntax Bool ::= "isId" "(" K ")" [function() predicate(Id)]
  rule `project:Id`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module ID-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(822,1,831,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports INT-SYNTAX$SYNTAX
  syntax String ::= "Id2String" "(" Id ")" [function() functional() hook(STRING.token2string) klabel(Id2String)]
  syntax KItem ::= Id
  syntax K
  syntax Id [org.kframework.attributes.Location(Location(826,3,826,19)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) token()]
  syntax Id ::= "project:Id" "(" K ")" [function() projection()]
  syntax Id ::= "freshId" "(" Int ")" [freshGenerator() function() functional() klabel(freshId)]
  syntax Id ::= "String2Id" "(" String ")" [function() functional() hook(STRING.string2token) klabel(String2Id)]
  syntax Bool ::= "isId" "(" K ")" [function() predicate(Id)]
  rule `project:Id`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module INT [org.kframework.attributes.Location(Location(451,1,480,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-COMMON
  imports INT$SYNTAX
  rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c) contentStartColumn(8) contentStartLine(458) org.kframework.attributes.Location(Location(458,8,458,164)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4) contentStartColumn(8) contentStartLine(469) org.kframework.attributes.Location(Location(469,8,469,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c) contentStartColumn(8) contentStartLine(468) org.kframework.attributes.Location(Location(468,8,468,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d) contentStartColumn(8) contentStartLine(476) org.kframework.attributes.Location(Location(476,8,476,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35) contentStartColumn(8) contentStartLine(456) org.kframework.attributes.Location(Location(456,8,456,85)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4) concrete() contentStartColumn(5) contentStartLine(463) org.kframework.attributes.Location(Location(463,5,466,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1) contentStartColumn(8) contentStartLine(473) org.kframework.attributes.Location(Location(473,8,473,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4) contentStartColumn(8) contentStartLine(460) org.kframework.attributes.Location(Location(460,8,461,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_==Int_`(I1,I2)=>`_==K_`(I1,I2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a) contentStartColumn(8) contentStartLine(471) org.kframework.attributes.Location(Location(471,8,471,40)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621) contentStartColumn(8) contentStartLine(472) org.kframework.attributes.Location(Location(472,8,472,53)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module INT$SYNTAX [org.kframework.attributes.Location(Location(451,1,480,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-SYMBOLIC$SYNTAX
  imports INT-COMMON$SYNTAX
  syntax K ::= "srandInt" "(" Int ")" [function() hook(INT.srand) klabel(srandInt)]
  syntax Int ::= "randInt" "(" Int ")" [function() hook(INT.rand) klabel(randInt)]
  syntax Int ::= "freshInt" "(" Int ")" [freshGenerator() function() functional() klabel(freshInt)]
endmodule


module INT-COMMON [org.kframework.attributes.Location(Location(366,1,410,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports INT-SYNTAX
  imports INT-COMMON$SYNTAX
  imports BOOL
  ModuleComment( divInt and modInt implement e-division ,[org.kframework.attributes.Location(Location(379,16,379,59)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( FIXME: translate /Int and %Int into smtlib ,[org.kframework.attributes.Location(Location(375,16,375,63)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( /Int and %Int implement t-division ,[org.kframework.attributes.Location(Location(376,16,376,55)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module INT-COMMON$SYNTAX [org.kframework.attributes.Location(Location(366,1,410,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority ~Int_ > _^Int_ _^%Int__ > _divInt_ _%Int_ _/Int_ _*Int_ _modInt_ > _+Int_ _-Int_ > _>>Int_ _<<Int_ > _&Int_ > _xorInt_ > _|Int_
  syntax associativity left _|Int_
  syntax associativity left _xorInt_
  syntax associativity left _modInt_
  syntax associativity left _divInt_ _%Int_ _/Int_ _*Int_ _modInt_
  syntax associativity left _divInt_
  syntax associativity left _^Int_ _^%Int__
  syntax associativity left _^Int_
  syntax associativity left _^%Int__
  syntax associativity left _>Int_
  syntax associativity left _>>Int_ _<<Int_
  syntax associativity left _>>Int_
  syntax associativity left _>=Int_
  syntax associativity left _==Int_
  syntax associativity left _=/=Int_
  syntax associativity left _<Int_
  syntax associativity left _<=Int_
  syntax associativity left _<<Int_
  syntax associativity left _/Int_
  syntax associativity left _-Int_
  syntax associativity left _+Int_ _-Int_
  syntax associativity left _+Int_
  syntax associativity left _*Int_
  syntax associativity left _&Int_
  syntax associativity left _%Int_
  syntax Int ::= Int "|Int" Int [function() functional() hook(INT.or) klabel(_|Int_) latex({#1}\mathrel{|_{\scriptstyle\it Int}}{#2}) left() smtlib(orInt) symbol()]
  syntax Int ::= Int "xorInt" Int [function() functional() hook(INT.xor) klabel(_xorInt_) latex({#1}\mathrel{\oplus_{\scriptstyle\it Int}}{#2}) left() smtlib(xorInt) symbol()]
  syntax Int ::= Int "modInt" Int [function() hook(INT.emod) klabel(_modInt_) left() smt-hook(mod) symbol()]
  syntax Int ::= Int "divInt" Int [function() hook(INT.ediv) klabel(_divInt_) left() smt-hook(div) symbol()]
  syntax Int ::= Int "^Int" Int [function() hook(INT.pow) klabel(_^Int_) latex({#1}\mathrel{{\char`\^}_{\!\scriptstyle\it Int}}{#2}) left() smt-hook(^) symbol()]
  syntax Int ::= Int "^%Int" Int Int [function() hook(INT.powmod) klabel(_^%Int__) left() smt-hook((mod (^ #1 #2) #3)) symbol()]
  syntax Int ::= Int ">>Int" Int [function() hook(INT.shr) klabel(_>>Int_) latex({#1}\mathrel{\gg_{\scriptstyle\it Int}}{#2}) left() smtlib(shrInt) symbol()]
  syntax Int ::= Int "<<Int" Int [function() hook(INT.shl) klabel(_<<Int_) latex({#1}\mathrel{\ll_{\scriptstyle\it Int}}{#2}) left() smtlib(shlInt) symbol()]
  syntax Int ::= Int "/Int" Int [function() hook(INT.tdiv) klabel(_/Int_) latex({#1}\mathrel{\div_{\scriptstyle\it Int}}{#2}) left() smt-hook(div) symbol()]
  syntax Int ::= Int "-Int" Int [function() functional() hook(INT.sub) klabel(_-Int_) latex({#1}\mathrel{-_{\scriptstyle\it Int}}{#2}) left() smt-hook(-) symbol()]
  syntax Int ::= Int "+Int" Int [function() functional() hook(INT.add) klabel(_+Int_) latex({#1}\mathrel{+_{\scriptstyle\it Int}}{#2}) left() smt-hook(+) symbol()]
  syntax Int ::= Int "*Int" Int [function() functional() hook(INT.mul) klabel(_*Int_) latex({#1}\mathrel{\ast_{\scriptstyle\it Int}}{#2}) left() smt-hook(*) symbol()]
  syntax Int ::= Int "&Int" Int [function() functional() hook(INT.and) klabel(_&Int_) latex({#1}\mathrel{\&_{\scriptstyle\it Int}}{#2}) left() smtlib(andInt) symbol()]
  syntax Int ::= Int "%Int" Int [function() hook(INT.tmod) klabel(_%Int_) latex({#1}\mathrel{\%_{\scriptstyle\it Int}}{#2}) left() smt-hook(mod) symbol()]
  syntax Int ::= "~Int" Int [function() functional() hook(INT.not) klabel(~Int_) latex(\mathop{\sim_{\scriptstyle\it Int}}{#1}) smtlib(notInt) symbol()]
  syntax Int ::= "signExtendBitRangeInt" "(" Int "," Int "," Int ")" [function() hook(INT.signExtendBitRange) klabel(signExtendBitRangeInt)]
  syntax Int ::= "minInt" "(" Int "," Int ")" [function() functional() hook(INT.min) smtlib(int_min)]
  syntax Int ::= "maxInt" "(" Int "," Int ")" [function() functional() hook(INT.max) smtlib(int_max)]
  syntax Int ::= "log2Int" "(" Int ")" [function() hook(INT.log2) klabel(log2Int)]
  syntax Int ::= "bitRangeInt" "(" Int "," Int "," Int ")" [function() hook(INT.bitRange) klabel(bitRangeInt)]
  syntax Int ::= "absInt" "(" Int ")" [function() functional() hook(INT.abs) klabel(absInt) smtlib(int_abs)]
  syntax Bool ::= Int "dividesInt" Int [function()]
  syntax Bool ::= Int ">Int" Int [function() functional() hook(INT.gt) klabel(_>Int_) latex({#1}\mathrel{>_{\scriptstyle\it Int}}{#2}) left() smt-hook(>) symbol()]
  syntax Bool ::= Int ">=Int" Int [function() functional() hook(INT.ge) klabel(_>=Int_) latex({#1}\mathrel{\geq_{\scriptstyle\it Int}}{#2}) left() smt-hook(>=) symbol()]
  syntax Bool ::= Int "==Int" Int [function() functional() hook(INT.eq) klabel(_==Int_) latex({#1}\mathrel{{=}{=}_{\scriptstyle\it Int}}{#2}) left() smt-hook(=) symbol()]
  syntax Bool ::= Int "=/=Int" Int [function() functional() hook(INT.ne) klabel(_=/=Int_) latex({#1}\mathrel{{=}{/}{=}_{\scriptstyle\it Int}}{#2}) left() smt-hook(distinct) symbol()]
  syntax Bool ::= Int "<Int" Int [function() functional() hook(INT.lt) klabel(_<Int_) latex({#1}\mathrel{<_{\scriptstyle\it Int}}{#2}) left() smt-hook(<) symbol()]
  syntax Bool ::= Int "<=Int" Int [function() functional() hook(INT.le) klabel(_<=Int_) latex({#1}\mathrel{\leq_{\scriptstyle\it Int}}{#2}) left() smt-hook(<=) symbol()]
endmodule


module INT-SYMBOLIC$SYNTAX [kore() org.kframework.attributes.Location(Location(412,1,449,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) symbolic()]
  imports ML-SYNTAX$SYNTAX
  imports INT-COMMON$SYNTAX
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(361,1,364,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(361,1,364,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(361,1,364,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2) prefer() token()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(361,1,364,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2) prefer() token()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module K [org.kframework.attributes.Location(Location(247,1,277,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-SORT-LATTICE
  imports K$SYNTAX
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  ModuleComment( functions that preserve sorts and can therefore have inner rewrites,[org.kframework.attributes.Location(Location(260,3,260,73)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( functions that do not preserve sort and therefore cannot have inner rewrites,[org.kframework.attributes.Location(Location(262,3,262,82)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Set membership over terms. In addition to equality over
      concrete patterns, K also supports computing equality
      between a concrete pattern and a symbolic pattern.
      This is compiled efficiently down to pattern matching,
      and can be used by putting a term with unbound variables
      in the left child of :=K or =/=K. Note that this does not
      bind variables used on the lhs however (although this may
      change in the future).,[org.kframework.attributes.Location(Location(265,3,272,30)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module K$SYNTAX [org.kframework.attributes.Location(Location(247,1,277,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
  syntax {Sort} Sort ::= Sort "=>" Sort [klabel(#KRewrite) symbol()]
  syntax {Sort} Sort ::= Sort "#as" Sort [klabel(#KAs) symbol()]
  syntax {Sort} Sort ::= "#fun" "(" Sort ")" "(" Sort ")" [klabel(#fun2) prefer() symbol()]
  syntax {Sort1, Sort2} Sort1 ::= "#fun" "(" Sort2 "=>" Sort1 ")" "(" Sort2 ")" [klabel(#fun3) symbol()]
  syntax priority #KRewrite > #withConfig
  syntax associativity non-assoc #KRewrite
  syntax associativity left _:=K_ _:/=K_
  syntax KItem ::= Bool
  syntax Bool ::= K ":=K" K [equalEqualK() function() functional() klabel(_:=K_) symbol()]
  syntax Bool ::= K ":/=K" K [function() functional() klabel(_:/=K_) notEqualEqualK() symbol()]
endmodule


module K-BOTTOM-SORT [org.kframework.attributes.Location(Location(172,1,176,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-BOTTOM-SORT$SYNTAX [org.kframework.attributes.Location(Location(172,1,176,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax {Sort} Sort ::= KBott
  syntax KItem ::= KBott
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module K-EQUAL [org.kframework.attributes.Location(Location(847,1,865,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports BOOL
  imports BASIC-K
  rule `_==Bool_`(K1,K2)=>`_==K_`(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5) contentStartColumn(8) contentStartLine(858) org.kframework.attributes.Location(Location(858,8,858,43)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc) contentStartColumn(8) contentStartLine(856) org.kframework.attributes.Location(Location(856,8,856,45)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`(C,_0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2) contentStartColumn(8) contentStartLine(863) org.kframework.attributes.Location(Location(863,8,863,67)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`(C,B1,_0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f) contentStartColumn(8) contentStartLine(862) org.kframework.attributes.Location(Location(862,8,862,59)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
endmodule


module K-EQUAL$SYNTAX [org.kframework.attributes.Location(Location(847,1,865,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
  syntax {Sort} Sort ::= "#if" Bool "#then" Sort "#else" Sort "#fi" [function() functional() hook(KEQUAL.ite) smt-hook(ite)]
  syntax priority _:=K_ _=/=K_ _:/=K_ _==K_ > #And _orElseBool_ weakExistsFinally #Implies _andThenBool_ _impliesBool_ #Floor #Exists #Ceil _andBool_ #Forall #Not #Or notBool_ #AG #Equals _xorBool_ _orBool__BOOL_Bool_Bool_Bool
  syntax associativity left _=/=K_ _==K_
  syntax Bool ::= K "==K" K [equalEqualK() function() functional() hook(KEQUAL.eq) klabel(_==K_) latex({#1}\mathrel{=_K}{#2}) smt-hook(=) symbol()]
  syntax Bool ::= K "=/=K" K [function() functional() hook(KEQUAL.ne) klabel(_=/=K_) latex({#1}\mathrel{\neq_K}{#2}) notEqualEqualK() smt-hook(distinct) symbol()]
endmodule


module K-IO [org.kframework.attributes.Location(Location(902,1,1029,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING
  imports LIST
  imports K-REFLECTION
  imports K-IO$SYNTAX
  rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1cffe88ed4a0ac4f38b38f0ee6d54743fa4052ada718e9cea5f7a0ccb082d65) contentStartColumn(8) contentStartLine(1009) org.kframework.attributes.Location(Location(1009,8,1009,20)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b272916c87307d1096c0f36d3414bbf8d87233e4d72cb16865787ff20a3f8d74) contentStartColumn(8) contentStartLine(1008) org.kframework.attributes.Location(Location(1008,8,1008,19)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(648a904c3812c1cb0fecdba98730749b96204f03d0ceae9cf8dba2a96458d1ea) contentStartColumn(8) contentStartLine(1010) org.kframework.attributes.Location(Location(1010,8,1010,20)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(569335f78fe30a33cbf240624728b69a4b2f754fb86768b85047de1f7ce3b0ef) contentStartColumn(8) contentStartLine(1002) org.kframework.attributes.Location(Location(1002,8,1002,48)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( stdout ,[org.kframework.attributes.Location(Location(1020,71,1020,82)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( stderr ,[org.kframework.attributes.Location(Location(1020,95,1020,106)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( exit code ,[org.kframework.attributes.Location(Location(1020,44,1020,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( executes the given command line with `sh -c cmd:String` on unix or,[org.kframework.attributes.Location(Location(1017,3,1017,72)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( creates a temporary file in the default system location,[org.kframework.attributes.Location(Location(1023,3,1023,61)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( `cmd /c cmd:String` on windows and returns #systemResult,[org.kframework.attributes.Location(Location(1018,3,1018,62)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( System,[org.kframework.attributes.Location(Location(1015,1,1015,10)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Remove a file or empty directory from the disk. Returns .K on success or an IOError on failure.,[org.kframework.attributes.Location(Location(1027,3,1027,101)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( ------------------------------,[org.kframework.attributes.Location(Location(1014,1,1014,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module K-IO$SYNTAX [org.kframework.attributes.Location(Location(902,1,1029,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports LIST$SYNTAX
  imports K-REFLECTION$SYNTAX
  syntax String ::= "path" "(" IOFile ")" [function()]
  syntax Stream ::= "project:Stream" "(" K ")" [function() projection()]
  syntax Stream ::= "#buffer" "(" K ")" [klabel(#buffer)]
  syntax KItem ::= Stream
  syntax KItem ::= IOString
  syntax KItem ::= IOInt
  syntax KItem ::= IOFile
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")" [klabel(#systemResult) symbol()]
  syntax KItem ::= "#system" "(" String ")" [function() hook(IO.system) impure() klabel(#system)]
  syntax KItem ::= "#stat" "(" String ")" [function() hook(IO.stat) impure()]
  syntax KItem ::= "#opendir" "(" String ")" [function() hook(IO.opendir) impure()]
  syntax KItem ::= "#lstat" "(" String ")" [function() hook(IO.lstat) impure()]
  syntax K ::= "#write" "(" Int "," String ")" [function() hook(IO.write) impure()]
  syntax K ::= "#unlock" "(" Int "," Int ")" [function() hook(IO.unlock) impure()]
  syntax K ::= "#shutdownWrite" "(" Int ")" [function() hook(IO.shutdownWrite) impure()]
  syntax K ::= "#seekEnd" "(" Int "," Int ")" [function() hook(IO.seekEnd) impure()]
  syntax K ::= "#seek" "(" Int "," Int ")" [function() hook(IO.seek) impure()]
  syntax K ::= "#remove" "(" String ")" [function() functional() hook(IO.remove) impure() klabel(#remove)]
  syntax K ::= "#putc" "(" Int "," Int ")" [function() hook(IO.putc) impure()]
  syntax K ::= "#logToFile" "(" String "," String ")" [function() functional() hook(IO.log) impure() klabel(#logToFile) returnsUnit() symbol()]
  syntax K ::= "#lock" "(" Int "," Int ")" [function() hook(IO.lock) impure()]
  syntax K ::= "#close" "(" Int ")" [function() hook(IO.close) impure()]
  syntax K
  syntax Int ::= "fd" "(" IOFile ")" [function()]
  syntax Int ::= "errno" "(" IOError ")" [function()]
  syntax Int ::= "#time" "(" ")" [function() hook(IO.time) impure()]
  syntax Int ::= "#stdout" [function() functional()]
  syntax Int ::= "#stdin" [function() functional()]
  syntax Int ::= "#stderr" [function() functional()]
  syntax IOString ::= String
  syntax IOString ::= IOError
  syntax IOString ::= "project:IOString" "(" K ")" [function() projection()]
  syntax IOString ::= "#read" "(" Int "," Int ")" [function() hook(IO.read) impure()]
  syntax IOInt ::= Int
  syntax IOInt ::= IOError
  syntax IOInt ::= "project:IOInt" "(" K ")" [function() projection()]
  syntax IOInt ::= "#tell" "(" Int ")" [function() hook(IO.tell) impure()]
  syntax IOInt ::= "#open" "(" String "," String ")" [function() hook(IO.open) impure()]
  syntax IOInt ::= "#open" "(" String ")" [function()]
  syntax IOInt ::= "#getc" "(" Int ")" [function() hook(IO.getc) impure()]
  syntax IOInt ::= "#accept" "(" Int ")" [function() hook(IO.accept) impure()]
  syntax IOFile ::= IOError
  syntax IOFile ::= "project:IOFile" "(" K ")" [function() projection()]
  syntax IOFile ::= "#tempFile" "(" String "," Int ")" [klabel(#tempFile) symbol()]
  syntax IOFile ::= "#mkstemp" "(" String ")" [function() hook(IO.mkstemp) impure() klabel(#mkstemp)]
  syntax IOError ::= "#unknownIOError" "(" Int ")" [klabel(#unknownIOError) symbol()]
  syntax IOError ::= "#EXDEV" [klabel(#EXDEV) symbol()]
  syntax IOError ::= "#EWOULDBLOCK" [klabel(#EWOULDBLOCK) symbol()]
  syntax IOError ::= "#ETOOMANYREFS" [klabel(#ETOOMANYREFS) symbol()]
  syntax IOError ::= "#ETIMEDOUT" [klabel(#ETIMEDOUT) symbol()]
  syntax IOError ::= "#ESRCH" [klabel(#ESRCH) symbol()]
  syntax IOError ::= "#ESPIPE" [klabel(#ESPIPE) symbol()]
  syntax IOError ::= "#ESOCKTNOSUPPORT" [klabel(#ESOCKTNOSUPPORT) symbol()]
  syntax IOError ::= "#ESHUTDOWN" [klabel(#ESHUTDOWN) symbol()]
  syntax IOError ::= "#EROFS" [klabel(#EROFS) symbol()]
  syntax IOError ::= "#ERANGE" [klabel(#ERANGE) symbol()]
  syntax IOError ::= "#EPROTOTYPE" [klabel(#EPROTOTYPE) symbol()]
  syntax IOError ::= "#EPROTONOSUPPORT" [klabel(#EPROTONOSUPPORT) symbol()]
  syntax IOError ::= "#EPIPE" [klabel(#EPIPE) symbol()]
  syntax IOError ::= "#EPFNOSUPPORT" [klabel(#EPFNOSUPPORT) symbol()]
  syntax IOError ::= "#EPERM" [klabel(#EPERM) symbol()]
  syntax IOError ::= "#EOVERFLOW" [klabel(#EOVERFLOW) symbol()]
  syntax IOError ::= "#EOPNOTSUPP" [klabel(#EOPNOTSUPP) symbol()]
  syntax IOError ::= "#EOF" [klabel(#EOF) symbol()]
  syntax IOError ::= "#ENXIO" [klabel(#ENXIO) symbol()]
  syntax IOError ::= "#ENOTTY" [klabel(#ENOTTY) symbol()]
  syntax IOError ::= "#ENOTSOCK" [klabel(#ENOTSOCK) symbol()]
  syntax IOError ::= "#ENOTEMPTY" [klabel(#ENOTEMPTY) symbol()]
  syntax IOError ::= "#ENOTDIR" [klabel(#ENOTDIR) symbol()]
  syntax IOError ::= "#ENOTCONN" [klabel(#ENOTCONN) symbol()]
  syntax IOError ::= "#ENOSYS" [klabel(#ENOSYS) symbol()]
  syntax IOError ::= "#ENOSPC" [klabel(#ENOSPC) symbol()]
  syntax IOError ::= "#ENOPROTOOPT" [klabel(#ENOPROTOOPT) symbol()]
  syntax IOError ::= "#ENOMEM" [klabel(#ENOMEM) symbol()]
  syntax IOError ::= "#ENOLCK" [klabel(#ENOLCK) symbol()]
  syntax IOError ::= "#ENOEXEC" [klabel(#ENOEXEC) symbol()]
  syntax IOError ::= "#ENOENT" [klabel(#ENOENT) symbol()]
  syntax IOError ::= "#ENODEV" [klabel(#ENODEV) symbol()]
  syntax IOError ::= "#ENOBUFS" [klabel(#ENOBUFS) symbol()]
  syntax IOError ::= "#ENFILE" [klabel(#ENFILE) symbol()]
  syntax IOError ::= "#ENETUNREACH" [klabel(#ENETUNREACH) symbol()]
  syntax IOError ::= "#ENETRESET" [klabel(#ENETRESET) symbol()]
  syntax IOError ::= "#ENETDOWN" [klabel(#ENETDOWN) symbol()]
  syntax IOError ::= "#ENAMETOOLONG" [klabel(#ENAMETOOLONG) symbol()]
  syntax IOError ::= "#EMSGSIZE" [klabel(#EMSGSIZE) symbol()]
  syntax IOError ::= "#EMLINK" [klabel(#EMLINK) symbol()]
  syntax IOError ::= "#EMFILE" [klabel(#EMFILE) symbol()]
  syntax IOError ::= "#ELOOP" [klabel(#ELOOP) symbol()]
  syntax IOError ::= "#EISDIR" [klabel(#EISDIR) symbol()]
  syntax IOError ::= "#EISCONN" [klabel(#EISCONN) symbol()]
  syntax IOError ::= "#EIO" [klabel(#EIO) symbol()]
  syntax IOError ::= "#EINVAL" [klabel(#EINVAL) symbol()]
  syntax IOError ::= "#EINTR" [klabel(#EINTR) symbol()]
  syntax IOError ::= "#EINPROGRESS" [klabel(#EINPROGRESS) symbol()]
  syntax IOError ::= "#EHOSTUNREACH" [klabel(#EHOSTUNREACH) symbol()]
  syntax IOError ::= "#EHOSTDOWN" [klabel(#EHOSTDOWN) symbol()]
  syntax IOError ::= "#EFBIG" [klabel(#EFBIG) symbol()]
  syntax IOError ::= "#EFAULT" [klabel(#EFAULT) symbol()]
  syntax IOError ::= "#EEXIST" [klabel(#EEXIST) symbol()]
  syntax IOError ::= "#EDOM" [klabel(#EDOM) symbol()]
  syntax IOError ::= "#EDESTADDRREQ" [klabel(#EDESTADDRREQ) symbol()]
  syntax IOError ::= "#EDEADLK" [klabel(#EDEADLK) symbol()]
  syntax IOError ::= "#ECONNRESET" [klabel(#ECONNRESET) symbol()]
  syntax IOError ::= "#ECONNREFUSED" [klabel(#ECONNREFUSED) symbol()]
  syntax IOError ::= "#ECONNABORTED" [klabel(#ECONNABORTED) symbol()]
  syntax IOError ::= "#ECHILD" [klabel(#ECHILD) symbol()]
  syntax IOError ::= "#EBUSY" [klabel(#EBUSY) symbol()]
  syntax IOError ::= "#EBADF" [klabel(#EBADF) symbol()]
  syntax IOError ::= "#EALREADY" [klabel(#EALREADY) symbol()]
  syntax IOError ::= "#EAGAIN" [klabel(#EAGAIN) symbol()]
  syntax IOError ::= "#EAFNOSUPPORT" [klabel(#EAFNOSUPPORT) symbol()]
  syntax IOError ::= "#EADDRNOTAVAIL" [klabel(#EADDRNOTAVAIL) symbol()]
  syntax IOError ::= "#EADDRINUSE" [klabel(#EADDRINUSE) symbol()]
  syntax IOError ::= "#EACCES" [klabel(#EACCES) symbol()]
  syntax IOError ::= "#E2BIG" [klabel(#E2BIG) symbol()]
  syntax Bool ::= "isStream" "(" K ")" [function() predicate(Stream)]
  syntax Bool ::= "isIOString" "(" K ")" [function() predicate(IOString)]
  syntax Bool ::= "isIOInt" "(" K ")" [function() predicate(IOInt)]
  syntax Bool ::= "isIOFile" "(" K ")" [function() predicate(IOFile)]
  rule `project:Stream`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:IOString`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:IOInt`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:IOFile`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") []
  rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") []
  rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") []
endmodule


module K-REFLECTION [org.kframework.attributes.Location(Location(867,1,888,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING
  imports K-REFLECTION$SYNTAX
  imports BASIC-K
  ModuleComment( undefined,[org.kframework.attributes.Location(Location(880,3,880,15)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( meaningful only for the purposes of compilation to a binary, otherwise,[org.kframework.attributes.Location(Location(879,3,879,76)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Takes as input a string and returns a K term,[org.kframework.attributes.Location(Location(883,3,883,50)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module K-REFLECTION$SYNTAX [org.kframework.attributes.Location(Location(867,1,888,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax {Sort} Sort ::= "#parseKORE" "(" String ")" [function() hook(KREFLECTION.parseKORE) klabel(#parseKORE)]
  syntax {Sort} Sort ::= "#parseKAST" "(" String ")" [function() hook(KREFLECTION.parseKAST) klabel(#parseKAST)]
  syntax String ::= "#sort" "(" K ")" [function() hook(KREFLECTION.sort) klabel(#sort)]
  syntax String ::= "#getenv" "(" String ")" [function() hook(KREFLECTION.getenv) impure() klabel(#getenv)]
  syntax List ::= "project:List" "(" K ")" [function() projection()]
  syntax List ::= "#argv" "(" ")" [function() hook(KREFLECTION.argv) klabel(#argv)]
  syntax KItem ::= List
  syntax KItem ::= IOError
  syntax KItem ::= "getKLabel" "(" K ")" [function() hook(KREFLECTION.getKLabel) klabel(getKLabel)]
  syntax KItem ::= "#fresh" "(" String ")" [function() hook(KREFLECTION.fresh) impure() klabel(#fresh)]
  syntax K ::= "#configuration" [function() hook(KREFLECTION.configuration) impure()]
  syntax K
  syntax IOError ::= "project:IOError" "(" K ")" [function() projection()]
  syntax IOError ::= "#noParse" "(" String ")" [klabel(#noParse) symbol()]
  syntax Bool ::= "isList" "(" K ")" [function() predicate(List)]
  syntax Bool ::= "isIOError" "(" K ")" [function() predicate(IOError)]
  rule `project:List`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:IOError`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module K-SORT-LATTICE [org.kframework.attributes.Location(Location(178,1,181,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports K-TOP-SORT
  imports K-SORT-LATTICE$SYNTAX
  imports K-BOTTOM-SORT
endmodule


module K-SORT-LATTICE$SYNTAX [org.kframework.attributes.Location(Location(178,1,181,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports K-TOP-SORT$SYNTAX
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-TERM [org.kframework.attributes.Location(Location(280,1,286,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-TERM$SYNTAX
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TERM$SYNTAX [org.kframework.attributes.Location(Location(280,1,286,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
endmodule


module K-TOP-SORT [org.kframework.attributes.Location(Location(166,1,170,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-TOP-SORT$SYNTAX
endmodule


module K-TOP-SORT$SYNTAX [org.kframework.attributes.Location(Location(166,1,170,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax {Sort} KItem ::= Sort
  syntax KItem ::= KBott
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module KAST [org.kframework.attributes.Location(Location(30,1,50,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports KSTRING
  imports KAST$SYNTAX
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  ModuleComment( something that doesn't collide with meta-variables,[org.kframework.attributes.Location(Location(44,24,44,77)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module KAST$SYNTAX [org.kframework.attributes.Location(Location(30,1,50,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports KSTRING$SYNTAX
  imports BUILTIN-ID-TOKENS$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left #KList
  syntax KList ::= KList "," KList [assoc() klabel(#KList) left() prefer() symbol() unit(#EmptyKList)]
  syntax KList ::= K
  syntax KList ::= ".KList" [klabel(#EmptyKList) symbol()]
  syntax KList ::= ".::KList" [klabel(#EmptyKList) symbol()]
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`" [token()]
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*" [prec(1) token()]
  syntax KLabel ::= #LowerId [token()]
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")" [klabel(#KApply) symbol()]
  syntax KBott ::= "#token" "(" KString "," KString ")" [klabel(#KToken) symbol()]
  syntax KBott ::= "#klabel" "(" KLabel ")" [klabel(#WrappedKLabel) symbol()]
  syntax K
  syntax Bool ::= "isKList" "(" K ")" [function() predicate(KList)]
  syntax Bool ::= "isKLabel" "(" K ")" [function() predicate(KLabel)]
endmodule


module KCELLS [org.kframework.attributes.Location(Location(109,1,122,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports KCELLS$SYNTAX
  imports KAST
endmodule


module KCELLS$SYNTAX [org.kframework.attributes.Location(Location(109,1,122,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  syntax associativity non-assoc #withConfig
  syntax associativity left #cells
  syntax KItem ::= Cell
  syntax KItem ::= Bag
  syntax K
  syntax Cell [org.kframework.attributes.Location(Location(112,3,112,13)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax Cell ::= "project:Cell" "(" K ")" [function() projection()]
  syntax Bool ::= "isCell" "(" K ")" [function() predicate(Cell)]
  syntax Bool ::= "isBag" "(" K ")" [function() predicate(Bag)]
  syntax Bool ::= "is#RuleBody" "(" K ")" [function() predicate(#RuleBody)]
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag [assoc() klabel(#cells) left() symbol() unit(#cells)]
  syntax Bag ::= "project:Bag" "(" K ")" [function() projection()]
  syntax Bag ::= ".Bag" [klabel(#cells) symbol()]
  syntax Bag ::= ".::Bag" [klabel(#cells) symbol()]
  syntax Bag ::= "(" Bag ")" [bracket()]
  syntax #RuleBody ::= "[" "[" K "]" "]" Bag [avoid() klabel(#withConfig) symbol()]
  rule `project:Cell`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:Bag`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module KSEQ [org.kframework.attributes.Location(Location(54,1,63,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  imports KAST
  imports K-TOP-SORT
endmodule


module KSEQ$SYNTAX [org.kframework.attributes.Location(Location(54,1,63,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  imports K-TOP-SORT$SYNTAX
  syntax {Sort} Sort ::= "(" Sort ")" [bracket()]
  syntax associativity left #KSequence
  syntax K ::= K "~>" K [assoc() klabel(#KSequence) left() symbol() unit(#EmptyK)]
  syntax K ::= ".K" [klabel(#EmptyK) symbol() unparseAvoid()]
  syntax K ::= ".::K" [klabel(#EmptyK) symbol() unparseAvoid()]
  syntax K ::= "." [klabel(#EmptyK) symbol()]
endmodule


module KSEQ-SYMBOLIC [org.kframework.attributes.Location(Location(96,1,107,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports KVARIABLE-SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports KSEQ
endmodule


module KSEQ-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(96,1,107,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  imports KVARIABLE-SYNTAX$SYNTAX
  imports KSEQ$SYNTAX
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\$)([A-Z][A-Za-z0-9'_]*)" [token()]
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\!|\\?|@)?([A-Z][A-Za-z0-9'_]*|_)" [prec(1) token()]
  syntax #KVariable ::= #UpperId [token()]
endmodule


module KSTRING [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports KSTRING$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  ModuleComment( optionally qualified strings, like in Scala "abc", i"abc", r"a*bc", etc.,[org.kframework.attributes.Location(Location(17,3,17,78)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKString" "(" K ")" [function() predicate(KString)]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKString" "(" K ")" [function() predicate(KString)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module KVARIABLE-SYNTAX [org.kframework.attributes.Location(Location(91,1,93,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports KVARIABLE-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module KVARIABLE-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(91,1,93,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "is#KVariable" "(" K ")" [function() predicate(#KVariable)]
  syntax #KVariable [org.kframework.attributes.Location(Location(92,3,92,19)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module KVARIABLE-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(91,1,93,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  syntax Bool ::= "is#KVariable" "(" K ")" [function() predicate(#KVariable)]
  syntax #KVariable [org.kframework.attributes.Location(Location(92,3,92,19)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module LANGUAGE-PARSING
  imports K-TERM
  imports ID-PROGRAM-PARSING
  imports HOPPER-SYNTAX
  imports HOPPER
endmodule


module LIST [org.kframework.attributes.Location(Location(223,1,288,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(263,17,263,24)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(TODO(AndreiS): move the paragraph below,[org.kframework.attributes.Location(Location(239,3,239,44)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( \section{User-Defined Lists} It is very common in \K to define a shorthand
   for lists of user-defined sorts. \K 's builtin way of doing this is to use
   List\{KItem,"Separator"\}, where "Separator" is any valid character or
   sequence of characters used to separate distinct elements.
   For example, after defining \\
   syntax KItem ::= Elt\\
   a user could then define
   syntax Elts ::= List\{Elt,","\} \\
   which would be a comma-separated list whose elements are all of sort Elt. A
   user could just as well define \\
   syntax Elts ::= List\{Elt,"and"\} \\
   which would be a list containing elements of sort Elt that are separated with
   the word "and". If only one argument is given, the separator is asumed to be
   commas. So, \\
   syntax Elts = List\{Elt\} \\
   would define a comma-separated list containing elements of sort Elt.
  ,[org.kframework.attributes.Location(Location(240,3,256,4)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( \section{Description} \K lists are ordered collections that may contain
   duplicate elements. These behave more like lists in functional programming
   languages than arrays in imperative programming languages; there's no
   numerical indexing, but instead specific elements are refered to using the
   Mylist,Mylist construct in combination with the MyListItem construct. It's
   worth noting that \K lists aren't exactly like lists in functional languages;
   they're associative, which means that it's easy to access elements at both
   ends of the lists and concatenate them. For example, L:Mylist,E accesses
   element E at the end of a list. ,[org.kframework.attributes.Location(Location(229,3,237,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Remove elements from the beginning and the end of the List. ,[org.kframework.attributes.Location(Location(280,3,280,68)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get the list length ,[org.kframework.attributes.Location(Location(286,3,286,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get an element form the List by index. Positive indices mean from the
   beginning (0 is the first element), and negative indices mean from the end
   (-1 is the last element). ,[org.kframework.attributes.Location(Location(267,3,269,31)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct an empty List: ,[org.kframework.attributes.Location(Location(261,3,261,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton List (a list with only  one element) ,[org.kframework.attributes.Location(Location(264,3,264,67)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct a new List as the concatenation of two Lists. This is similar to
   the append "@" operation in many functional programming languages. ,[org.kframework.attributes.Location(Location(258,3,259,72)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Check element membership in the given list ,[org.kframework.attributes.Location(Location(283,3,283,51)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module LIST$SYNTAX [org.kframework.attributes.Location(Location(223,1,288,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _List_
  syntax List [hook(LIST.List) org.kframework.attributes.Location(Location(227,3,227,31)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax List ::= List List [assoc() element(ListItem) format(%1%n%2) function() functional() hook(LIST.concat) klabel(_List_) left() smtlib(smt_seq_concat) symbol() unit(.List)]
  syntax List ::= List "[" Int "<-" KItem "]" [function() hook(LIST.update) klabel(List:set)]
  syntax List ::= "updateList" "(" List "," Int "," List ")" [function() hook(LIST.updateAll) klabel(updateList)]
  syntax List ::= "range" "(" List "," Int "," Int ")" [function() hook(LIST.range) klabel(List:range) symbol()]
  syntax List ::= "project:List" "(" K ")" [function() projection()]
  syntax List ::= "makeList" "(" Int "," KItem ")" [function() hook(LIST.make) klabel(makeList)]
  syntax List ::= "fillList" "(" List "," Int "," Int "," KItem ")" [function() hook(LIST.fill) klabel(fillList)]
  syntax List ::= "ListItem" "(" KItem ")" [function() functional() hook(LIST.element) klabel(ListItem) smtlib(smt_seq_elem) symbol()]
  syntax List ::= ".List" [function() functional() hook(LIST.unit) klabel(.List) latex(\dotCt{List}) smtlib(smt_seq_nil) symbol()]
  syntax KItem ::= List "[" Int "]" [function() hook(LIST.get) klabel(List:get) symbol()]
  syntax KItem ::= List
  syntax KItem ::= Bool
  syntax K
  syntax Int ::= "size" "(" List ")" [function() functional() hook(LIST.size) klabel(sizeList) smtlib(smt_seq_len)]
  syntax Bool ::= KItem "in" List [function() functional() hook(LIST.in) klabel(_inList_)]
  syntax Bool ::= "isList" "(" K ")" [function() predicate(List)]
  rule `project:List`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module MAP [org.kframework.attributes.Location(Location(91,1,157,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports SET
  imports MAP$SYNTAX
  imports LIST
  imports INT-SYNTAX
  imports BOOL-SYNTAX
  ModuleComment(| "."                            [function, hook(MAP.unit)],[org.kframework.attributes.Location(Location(109,16,109,77)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(\section{Description} The Map represents a generalized associative array.
   Each key can be paired with an arbitrary value, and can be used to reference
   its associated value. Multiple bindings for the same key are not allowed. ,[org.kframework.attributes.Location(Location(99,3,101,79)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( breaks klabel uniqueness,[org.kframework.attributes.Location(Location(108,16,108,43)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Update the first map by adding all key/value pairs in the second map. If a
   key in the first map exists also in the second map, its associated value will
   be overwritten by the value from the second map. ,[org.kframework.attributes.Location(Location(132,3,134,54)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Update the Map by removing all key/value pairs with the key in the Set. ,[org.kframework.attributes.Location(Location(137,3,137,80)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Update a Map in form of  of keys and values: ,[org.kframework.attributes.Location(Location(122,3,122,53)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Retrieve the value associated with the given key ,[org.kframework.attributes.Location(Location(117,3,117,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Remove key/value pair associated with the key from map? ,[org.kframework.attributes.Location(Location(125,3,125,64)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get the difference of two maps interpreted as sets of entries
   ($M_1 \setminus M2$) ,[org.kframework.attributes.Location(Location(128,3,129,26)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get the Map size (number of key/value pairs) ,[org.kframework.attributes.Location(Location(149,3,149,53)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen key of the Map  ,[org.kframework.attributes.Location(Location(155,3,155,50)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get a Set consisting of all keys in the Map:,[org.kframework.attributes.Location(Location(140,3,140,52)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get a List consisting of all values in the Map: ,[org.kframework.attributes.Location(Location(146,3,146,56)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Map (a Map with only one key/value pair). The key
   is on the left and the value is on the right ,[org.kframework.attributes.Location(Location(110,3,111,50)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct a new Map consisting of key/value pairs of two Maps (the keys of
   the two Maps are assumed disjoint) ,[org.kframework.attributes.Location(Location(103,3,104,40)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Check map inclusion ,[org.kframework.attributes.Location(Location(152,3,152,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(  Construct an empty Map ,[org.kframework.attributes.Location(Location(106,3,106,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module MAP$SYNTAX [org.kframework.attributes.Location(Location(91,1,157,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports LIST$SYNTAX
  imports INT-SYNTAX$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")" [function() functional() hook(MAP.keys) klabel(keys)]
  syntax Map [hook(MAP.Map) org.kframework.attributes.Location(Location(97,3,97,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Map ::= Map Map [assoc() comm() element(_|->_) format(%1%n%2) function() hook(MAP.concat) index(0) klabel(_Map_) left() symbol() unit(.Map)]
  syntax Map ::= Map "[" KItem "<-" KItem "]" [function() functional() hook(MAP.update) klabel(Map:update) prefer() symbol()]
  syntax Map ::= Map "[" KItem "<-" "undef" "]" [function() functional() hook(MAP.remove) klabel(_[_<-undef]) symbol()]
  syntax Map ::= Map "-Map" Map [function() functional() hook(MAP.difference) latex({#1}-_{\it Map}{#2})]
  syntax Map ::= KItem "|->" KItem [function() functional() hook(MAP.element) klabel(_|->_) latex({#1}\mapsto{#2}) symbol()]
  syntax Map ::= "updateMap" "(" Map "," Map ")" [function() functional() hook(MAP.updateAll) klabel(updateMap)]
  syntax Map ::= "removeAll" "(" Map "," Set ")" [function() functional() hook(MAP.removeAll) klabel(removeAll)]
  syntax Map ::= "project:Map" "(" K ")" [function() projection()]
  syntax Map ::= ".Map" [function() functional() hook(MAP.unit) klabel(.Map) latex(\dotCt{Map}) symbol()]
  syntax List ::= "values" "(" Map ")" [function() hook(MAP.values) klabel(values)]
  syntax List ::= "keys_list" "(" Map ")" [function() hook(MAP.keys_list)]
  syntax KItem ::= Map "[" KItem "]" [function() hook(MAP.lookup) klabel(Map:lookup) symbol()]
  syntax KItem ::= Map "[" KItem "]" "orDefault" KItem [function() functional() hook(MAP.lookupOrDefault) klabel(Map:lookupOrDefault)]
  syntax KItem ::= Map
  syntax KItem ::= "choice" "(" Map ")" [function() hook(MAP.choice) klabel(Map:choice)]
  syntax K
  syntax Int ::= "size" "(" Map ")" [function() functional() hook(MAP.size) klabel(sizeMap)]
  syntax Bool ::= Map "<=Map" Map [function() functional() hook(MAP.inclusion)]
  syntax Bool ::= KItem "in_keys" "(" Map ")" [function() functional() hook(MAP.in_keys)]
  syntax Bool ::= "isMap" "(" K ")" [function() predicate(Map)]
  rule `project:Map`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module MINT$SYNTAX [org.kframework.attributes.Location(Location(1212,1,1331,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports MINT-SYNTAX$SYNTAX
  imports INT$SYNTAX
  syntax {Width} MInt{Width} ::= MInt{Width} "|MInt" MInt{Width} [function() functional() hook(MINT.or) smt-hook(bvor)]
  syntax {Width} MInt{Width} ::= MInt{Width} "xorMInt" MInt{Width} [function() functional() hook(MINT.xor) smt-hook(bvxor)]
  syntax {Width} MInt{Width} ::= MInt{Width} ">>lMInt" MInt{Width} [function() hook(MINT.lshr) smt-hook(bvlshr)]
  syntax {Width} MInt{Width} ::= MInt{Width} ">>aMInt" MInt{Width} [function() hook(MINT.ashr) smt-hook(bvashr)]
  syntax {Width} MInt{Width} ::= MInt{Width} "<<MInt" MInt{Width} [function() hook(MINT.shl) smt-hook(bvshl)]
  syntax {Width} MInt{Width} ::= MInt{Width} "/uMInt" MInt{Width} [function() hook(MINT.udiv) smt-hook(bvudiv)]
  syntax {Width} MInt{Width} ::= MInt{Width} "/sMInt" MInt{Width} [function() hook(MINT.sdiv) smt-hook(bvsdiv)]
  syntax {Width} MInt{Width} ::= MInt{Width} "-MInt" MInt{Width} [function() functional() hook(MINT.sub) smt-hook(bvsub)]
  syntax {Width} MInt{Width} ::= MInt{Width} "+MInt" MInt{Width} [function() functional() hook(MINT.add) smt-hook(bvadd)]
  syntax {Width} MInt{Width} ::= MInt{Width} "*MInt" MInt{Width} [function() functional() hook(MINT.mul) smt-hook(bvmul)]
  syntax {Width} MInt{Width} ::= MInt{Width} "&MInt" MInt{Width} [function() functional() hook(MINT.and) smt-hook(bvand)]
  syntax {Width} MInt{Width} ::= MInt{Width} "%uMInt" MInt{Width} [function() hook(MINT.urem) smt-hook(bvurem)]
  syntax {Width} MInt{Width} ::= MInt{Width} "%sMInt" MInt{Width} [function() hook(MINT.srem) smt-hook(bvsrem)]
  syntax {Width} MInt{Width} ::= "~MInt" MInt{Width} [function() functional() hook(MINT.not) smt-hook(bvnot)]
  syntax {Width} MInt{Width} ::= "uMinMInt" "(" MInt{Width} "," MInt{Width} ")" [function() functional() hook(MINT.umin) klabel(uMinMInt) smt-hook((ite (bvult #1 #2) #1 #2))]
  syntax {Width} MInt{Width} ::= "uMaxMInt" "(" MInt{Width} "," MInt{Width} ")" [function() functional() hook(MINT.umax) klabel(uMaxMInt) smt-hook((ite (bvult #1 #2) #2 #1))]
  syntax {Width} MInt{Width} ::= "sMinMInt" "(" MInt{Width} "," MInt{Width} ")" [function() functional() hook(MINT.smin) klabel(sMinMInt) smt-hook((ite (bvslt #1 #2) #1 #2))]
  syntax {Width} MInt{Width} ::= "sMaxMInt" "(" MInt{Width} "," MInt{Width} ")" [function() functional() hook(MINT.smax) klabel(sMaxMInt) smt-hook((ite (bvslt #1 #2) #2 #1))]
  syntax {Width} MInt{Width} ::= "Int2MInt" "(" Int ")" [function() functional() hook(MINT.integer) klabel(Int2MInt) smt-hook(int2bv)]
  syntax {Width} MInt{Width} ::= "--MInt" MInt{Width} [function() functional() hook(MINT.neg) smt-hook(bvuminus)]
  syntax {Width} Int ::= "bitwidthMInt" "(" MInt{Width} ")" [function() functional() hook(MINT.bitwidth) klabel(bitwidthMInt)]
  syntax {Width} Int ::= "MInt2Unsigned" "(" MInt{Width} ")" [function() functional() hook(MINT.uvalue) klabel(MInt2Unsigned) smt-hook(bv2int)]
  syntax {Width} Int ::= "MInt2Signed" "(" MInt{Width} ")" [function() functional() hook(MINT.svalue) klabel(MInt2Signed)]
  syntax {Width} Bool ::= MInt{Width} ">uMInt" MInt{Width} [function() functional() hook(MINT.ugt) smt-hook(bvugt)]
  syntax {Width} Bool ::= MInt{Width} ">sMInt" MInt{Width} [function() functional() hook(MINT.sgt) smt-hook(bvsgt)]
  syntax {Width} Bool ::= MInt{Width} ">=uMInt" MInt{Width} [function() functional() hook(MINT.uge) smt-hook(bvuge)]
  syntax {Width} Bool ::= MInt{Width} ">=sMInt" MInt{Width} [function() functional() hook(MINT.sge) smt-hook(bvsge)]
  syntax {Width} Bool ::= MInt{Width} "==MInt" MInt{Width} [function() functional() hook(MINT.eq) smt-hook(=)]
  syntax {Width} Bool ::= MInt{Width} "=/=MInt" MInt{Width} [function() functional() hook(MINT.ne) smt-hook(distinct)]
  syntax {Width} Bool ::= MInt{Width} "<uMInt" MInt{Width} [function() functional() hook(MINT.ult) smt-hook(bvult)]
  syntax {Width} Bool ::= MInt{Width} "<sMInt" MInt{Width} [function() functional() hook(MINT.slt) smt-hook(bvslt)]
  syntax {Width} Bool ::= MInt{Width} "<=uMInt" MInt{Width} [function() functional() hook(MINT.ule) smt-hook(bvule)]
  syntax {Width} Bool ::= MInt{Width} "<=sMInt" MInt{Width} [function() functional() hook(MINT.sle) smt-hook(bvsle)]
  syntax {Width1, Width2} MInt{Width1} ::= "roundMInt" "(" MInt{Width2} ")" [function() functional() hook(MINT.round) klabel(roundMInt)]
  syntax priority --MInt__MINT_MInt_MInt ~MInt__MINT_MInt_MInt > _/sMInt__MINT_MInt_MInt_MInt _*MInt__MINT_MInt_MInt_MInt _/uMInt__MINT_MInt_MInt_MInt _%uMInt__MINT_MInt_MInt_MInt _%sMInt__MINT_MInt_MInt_MInt > _+MInt__MINT_MInt_MInt_MInt _-MInt__MINT_MInt_MInt_MInt > _<<MInt__MINT_MInt_MInt_MInt _>>aMInt__MINT_MInt_MInt_MInt _>>lMInt__MINT_MInt_MInt_MInt > _&MInt__MINT_MInt_MInt_MInt > _xorMInt__MINT_MInt_MInt_MInt > _|MInt__MINT_MInt_MInt_MInt
  syntax associativity left _|MInt__MINT_MInt_MInt_MInt
  syntax associativity left _xorMInt__MINT_MInt_MInt_MInt
  syntax associativity left _<<MInt__MINT_MInt_MInt_MInt _>>aMInt__MINT_MInt_MInt_MInt _>>lMInt__MINT_MInt_MInt_MInt
  syntax associativity left _/sMInt__MINT_MInt_MInt_MInt _*MInt__MINT_MInt_MInt_MInt _/uMInt__MINT_MInt_MInt_MInt _%uMInt__MINT_MInt_MInt_MInt _%sMInt__MINT_MInt_MInt_MInt
  syntax associativity left _+MInt__MINT_MInt_MInt_MInt _-MInt__MINT_MInt_MInt_MInt
  syntax associativity left _&MInt__MINT_MInt_MInt_MInt
  syntax Int ::= "uminMInt" "(" Int ")" [function() klabel(uminMInt)]
  syntax Int ::= "umaxMInt" "(" Int ")" [function() klabel(umaxMInt)]
  syntax Int ::= "sminMInt" "(" Int ")" [function() klabel(sminMInt)]
  syntax Int ::= "smaxMInt" "(" Int ")" [function() klabel(smaxMInt)]
  syntax Bool ::= "uoverflowMInt" "(" Int "," Int ")" [function() klabel(uoverflowMInt)]
  syntax Bool ::= "soverflowMInt" "(" Int "," Int ")" [function() klabel(soverflowMInt)]
endmodule


module MINT-SYNTAX [org.kframework.attributes.Location(Location(1203,1,1210,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports MINT-SYNTAX$SYNTAX
  ModuleComment(\section{Description} The MInt implements machine integers of arbitrary
   * bit width represented in 2's complement. ,[org.kframework.attributes.Location(Location(1204,3,1205,48)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Machine integer of bit width and value. ,[org.kframework.attributes.Location(Location(1208,3,1208,48)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module MINT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1203,1,1210,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax {Width} MInt{Width} ::= r"[\\+-]?[0-9]+[pP][0-9]+" [hook(MINT.literal) prec(2) token()]
  syntax MInt{Width} [hook(MINT.MInt) org.kframework.attributes.Location(Location(1206,3,1206,46)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
endmodule


module ML-SYNTAX [org.kframework.attributes.Location(Location(65,1,89,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K
  imports ML-SYNTAX$SYNTAX
endmodule


module ML-SYNTAX [org.kframework.attributes.Location(Location(65,1,89,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K
  imports ML-SYNTAX$SYNTAX
endmodule


module ML-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(65,1,89,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax {Sort} Sort ::= Sort "#Or" Sort [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#Or) left() mlOp() symbol() unit(#False)]
  syntax {Sort} Sort ::= Sort "#Implies" Sort [format(%i%1%d%n%2%n%i%3%d) klabel(#Implies) mlImplies() mlOp() symbol()]
  syntax {Sort} Sort ::= Sort "#And" Sort [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#And) left() mlAnd() mlOp() symbol() unit(#True)]
  syntax {Sort} Sort ::= "#wEF" "(" Sort ")" [klabel(weakExistsFinally) mlOp() mlQuantifier() symbol()]
  syntax {Sort} Sort ::= "#True" [klabel(#True) mlUnary() symbol()]
  syntax {Sort} Sort ::= "#Not" "(" Sort ")" [klabel(#Not) mlOp() mlUnary() symbol()]
  syntax {Sort} Sort ::= "#False" [klabel(#False) mlUnary() symbol()]
  syntax {Sort} Sort ::= "#AG" "(" Sort ")" [klabel(#AG) mlOp() mlQuantifier() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "{" Sort1 "#Equals" Sort1 "}" [format(%1%i%n%2%d%n%3%i%n%4%d%n%5) klabel(#Equals) mlEquals() mlOp() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Forall" Sort1 "." Sort2 [klabel(#Forall) mlBinder() mlOp() mlQuantifier() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Floor" "(" Sort1 ")" [klabel(#Floor) mlOp() mlUnary() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Exists" Sort1 "." Sort2 [klabel(#Exists) mlBinder() mlOp() mlQuantifier() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Ceil" "(" Sort1 ")" [klabel(#Ceil) mlOp() mlUnary() symbol()]
  syntax priority #True #Floor #Ceil #Not #False > #Equals > #And
  syntax priority #Implies > #Exists #Forall #AG weakExistsFinally
  syntax priority #And > #Or > #Implies
  syntax associativity left #Or
  syntax associativity left #And
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module ML-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(65,1,89,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax {Sort} Sort ::= Sort "#Or" Sort [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#Or) left() mlOp() symbol() unit(#False)]
  syntax {Sort} Sort ::= Sort "#Implies" Sort [format(%i%1%d%n%2%n%i%3%d) klabel(#Implies) mlImplies() mlOp() symbol()]
  syntax {Sort} Sort ::= Sort "#And" Sort [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#And) left() mlAnd() mlOp() symbol() unit(#True)]
  syntax {Sort} Sort ::= "#wEF" "(" Sort ")" [klabel(weakExistsFinally) mlOp() mlQuantifier() symbol()]
  syntax {Sort} Sort ::= "#True" [klabel(#True) mlUnary() symbol()]
  syntax {Sort} Sort ::= "#Not" "(" Sort ")" [klabel(#Not) mlOp() mlUnary() symbol()]
  syntax {Sort} Sort ::= "#False" [klabel(#False) mlUnary() symbol()]
  syntax {Sort} Sort ::= "#AG" "(" Sort ")" [klabel(#AG) mlOp() mlQuantifier() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "{" Sort1 "#Equals" Sort1 "}" [format(%1%i%n%2%d%n%3%i%n%4%d%n%5) klabel(#Equals) mlEquals() mlOp() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Forall" Sort1 "." Sort2 [klabel(#Forall) mlBinder() mlOp() mlQuantifier() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Floor" "(" Sort1 ")" [klabel(#Floor) mlOp() mlUnary() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Exists" Sort1 "." Sort2 [klabel(#Exists) mlBinder() mlOp() mlQuantifier() symbol()]
  syntax {Sort1, Sort2} Sort2 ::= "#Ceil" "(" Sort1 ")" [klabel(#Ceil) mlOp() mlUnary() symbol()]
  syntax priority #True #Floor #Ceil #Not #False > #Equals > #And
  syntax priority #Implies > #Exists #Forall #AG weakExistsFinally
  syntax priority #And > #Or > #Implies
  syntax associativity left #Or
  syntax associativity left #And
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module PROGRAM-LISTS [org.kframework.attributes.Location(Location(206,1,218,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K
  imports PROGRAM-LISTS$SYNTAX
  ModuleComment( replaces the default productions for lists:,[org.kframework.attributes.Location(Location(209,3,209,49)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( into a series of productions more suitable for programs:,[org.kframework.attributes.Location(Location(212,3,212,62)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(208,3,208,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Ne#Es ::= E "," Ne#Es     [klabel('_,_)],[org.kframework.attributes.Location(Location(214,3,214,46)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Es#Terminator ::= ""      [klabel('.Es)],[org.kframework.attributes.Location(Location(213,3,213,46)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Es ::= Ne#Es,[org.kframework.attributes.Location(Location(216,3,216,18)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Es ::= E "," Es [userList("*"), klabel('_,_)],[org.kframework.attributes.Location(Location(210,3,210,51)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment(      | Es#Terminator      // if the list is *,[org.kframework.attributes.Location(Location(217,3,217,51)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment(      | ".Es"    [userList("*"), klabel('.Es)],[org.kframework.attributes.Location(Location(211,3,211,51)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment(         | E Es#Terminator [klabel('_,_)],[org.kframework.attributes.Location(Location(215,3,215,46)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module PROGRAM-LISTS$SYNTAX [org.kframework.attributes.Location(Location(206,1,218,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module RECORD-PRODUCTIONS [org.kframework.attributes.Location(Location(239,1,244,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  ModuleComment( will be able to be parsed with don't-care variables according,[org.kframework.attributes.Location(Location(242,3,242,67)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( to their nonterminal's names,[org.kframework.attributes.Location(Location(243,3,243,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( syntax Sort ::= name(Args),[org.kframework.attributes.Location(Location(241,3,241,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, prefix productions of the form,[org.kframework.attributes.Location(Location(240,3,240,64)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module RECORD-PRODUCTIONS$SYNTAX [org.kframework.attributes.Location(Location(239,1,244,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
endmodule


module REQUIRES-ENSURES [org.kframework.attributes.Location(Location(153,1,164,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports BASIC-K
endmodule


module REQUIRES-ENSURES$SYNTAX [org.kframework.attributes.Location(Location(153,1,164,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports BASIC-K$SYNTAX
  syntax K
  syntax Bool ::= "is#RuleContent" "(" K ")" [function() predicate(#RuleContent)]
  syntax Bool ::= "is#RuleBody" "(" K ")" [function() predicate(#RuleBody)]
  syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]
  syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires) symbol()]
  syntax #RuleContent ::= #RuleBody "when" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]
  syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]
  syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]
  syntax #RuleContent ::= #RuleBody "ensures" K [klabel(#ruleEnsures) symbol()]
  syntax #RuleBody ::= K
endmodule


module RULE-CELLS [org.kframework.attributes.Location(Location(124,1,134,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports RULE-CELLS$SYNTAX
  imports KCELLS
  ModuleComment(syntax Cell ::= "<top>" #OptionalDots K #OptionalDots "</top>" [klabel(<top>)],[org.kframework.attributes.Location(Location(130,3,130,83)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(127,3,127,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( generates, for all productions that have the attribute 'cell' or 'maincell',,[org.kframework.attributes.Location(Location(128,3,128,82)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( a production like below:,[org.kframework.attributes.Location(Location(129,3,129,30)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module RULE-CELLS$SYNTAX [org.kframework.attributes.Location(Location(124,1,134,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax K
  syntax Bool ::= "is#OptionalDots" "(" K ")" [function() predicate(#OptionalDots)]
  syntax #OptionalDots ::= "..." [klabel(#dots) symbol()]
  syntax #OptionalDots ::= "" [klabel(#noDots) symbol()]
endmodule


module RULE-LISTS [org.kframework.attributes.Location(Location(220,1,225,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(221,3,221,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( adds the subsort production to the parsing module only:,[org.kframework.attributes.Location(Location(222,3,222,61)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
  ModuleComment( Es ::= E        [userList("*")],[org.kframework.attributes.Location(Location(223,3,223,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))])
endmodule


module RULE-LISTS$SYNTAX [org.kframework.attributes.Location(Location(220,1,225,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
endmodule


module RULE-TAG-SYNTAX [org.kframework.attributes.Location(Location(1351,1,1355,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports RULE-TAG-SYNTAX$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module RULE-TAG-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1351,1,1355,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  syntax Bool ::= "is#RuleTag" "(" K ")" [function() predicate(#RuleTag)]
  syntax #RuleTag ::= #LowerId [token()]
endmodule


module SET [org.kframework.attributes.Location(Location(185,1,221,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(198,16,198,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( \section{Description} The Set represents a mathematical set (a collection
   of unique items). ,[org.kframework.attributes.Location(Location(191,3,192,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get the relative complement of two asets ($A \setminus B$),[org.kframework.attributes.Location(Location(207,3,207,66)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get the intersection of two sets ($A \cap B$) ,[org.kframework.attributes.Location(Location(204,3,204,54)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get the cardinality of a set ($|A|$) ,[org.kframework.attributes.Location(Location(216,3,216,45)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen element of the Set ,[org.kframework.attributes.Location(Location(219,3,219,53)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct an empty Set ,[org.kframework.attributes.Location(Location(196,3,196,31)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Set (a Set with only one element $\{ a \}$). To add
   an element $a$ to a set $A$, construct the union of the singleton set
   $\{ a \}$ and $A$ ($\{ a \} \cup A$). ,[org.kframework.attributes.Location(Location(199,3,201,43)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Construct a new Set as the union of two different sets ($A \cup B$) ,[org.kframework.attributes.Location(Location(194,3,194,76)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Check set inclusion ($A \subseteq B$) ,[org.kframework.attributes.Location(Location(213,3,213,46)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Check element membership in a set ($a \in A$) ,[org.kframework.attributes.Location(Location(210,3,210,54)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module SET$SYNTAX [org.kframework.attributes.Location(Location(185,1,221,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _Set_
  syntax Set [hook(SET.Set) org.kframework.attributes.Location(Location(189,3,189,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Set ::= Set Set [assoc() comm() element(SetItem) format(%1%n%2) function() functional() hook(SET.concat) idem() klabel(_Set_) left() symbol() unit(.Set)]
  syntax Set ::= Set "-Set" Set [function() functional() hook(SET.difference) klabel(Set:difference) latex({#1}-_{\it Set}{#2}) symbol()]
  syntax Set ::= "project:Set" "(" K ")" [function() projection()]
  syntax Set ::= "intersectSet" "(" Set "," Set ")" [function() functional() hook(SET.intersection) klabel(intersectSet)]
  syntax Set ::= "SetItem" "(" KItem ")" [function() functional() hook(SET.element) klabel(SetItem) symbol()]
  syntax Set ::= ".Set" [function() functional() hook(SET.unit) klabel(.Set) latex(\dotCt{Set}) symbol()]
  syntax KItem ::= Set
  syntax KItem ::= Bool
  syntax KItem ::= "choice" "(" Set ")" [function() hook(SET.choice) klabel(Set:choice)]
  syntax K
  syntax Int ::= "size" "(" Set ")" [function() functional() hook(SET.size) klabel(size)]
  syntax Bool ::= Set "<=Set" Set [function() functional() hook(SET.inclusion)]
  syntax Bool ::= KItem "in" Set [function() functional() hook(SET.in) klabel(Set:in) symbol()]
  syntax Bool ::= "isSet" "(" K ")" [function() predicate(Set)]
  rule `project:Set`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module SORT-KBOTT [org.kframework.attributes.Location(Location(25,1,28,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports SORT-K
endmodule


module SORT-KBOTT$SYNTAX [org.kframework.attributes.Location(Location(25,1,28,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KBott [org.kframework.attributes.Location(Location(27,3,27,14)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "isKBott" "(" K ")" [function() predicate(KBott)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module STDIN-STREAM [org.kframework.attributes.Location(Location(1037,1,1131,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
endmodule


module STDOUT-STREAM [org.kframework.attributes.Location(Location(1133,1,1201,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
endmodule


module STRING [org.kframework.attributes.Location(Location(568,1,644,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d) contentStartColumn(8) contentStartLine(623) org.kframework.attributes.Location(Location(623,8,623,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956) contentStartColumn(8) contentStartLine(622) org.kframework.attributes.Location(Location(622,8,622,182)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,_0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc) contentStartColumn(8) contentStartLine(633) org.kframework.attributes.Location(Location(633,8,634,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d) contentStartColumn(8) contentStartLine(630) org.kframework.attributes.Location(Location(630,8,632,66)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceAll(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839) contentStartColumn(8) contentStartLine(642) org.kframework.attributes.Location(Location(642,8,642,154)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,_0,_1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842) contentStartColumn(8) contentStartLine(641) org.kframework.attributes.Location(Location(641,8,641,49)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING_String_String_String_String_Int`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7) contentStartColumn(8) contentStartLine(637) org.kframework.attributes.Location(Location(637,8,640,30)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `findChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431) contentStartColumn(8) contentStartLine(621) org.kframework.attributes.Location(Location(621,8,621,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `findChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`(`_==Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`(`_==Int_`(`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)))) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5) contentStartColumn(8) contentStartLine(620) org.kframework.attributes.Location(Location(620,8,620,431)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING_Int_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToCount)),`lengthString(_)_STRING_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf) contentStartColumn(8) contentStartLine(627) org.kframework.attributes.Location(Location(627,8,628,60)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec) contentStartColumn(8) contentStartLine(625) org.kframework.attributes.Location(Location(625,8,626,59)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_>String__STRING_Bool_String_String`(S1,S2)=>`_<String__STRING_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92) contentStartColumn(8) contentStartLine(617) org.kframework.attributes.Location(Location(617,8,617,52)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_>=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33) contentStartColumn(8) contentStartLine(618) org.kframework.attributes.Location(Location(618,8,618,63)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_==String__STRING_Bool_String_String`(S1,S2)=>`_==K_`(S1,S2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9) contentStartColumn(8) contentStartLine(604) org.kframework.attributes.Location(Location(604,8,604,49)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c) contentStartColumn(8) contentStartLine(603) org.kframework.attributes.Location(Location(603,8,603,65)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8) contentStartColumn(8) contentStartLine(616) org.kframework.attributes.Location(Location(616,8,616,63)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module STRING$SYNTAX [org.kframework.attributes.Location(Location(568,1,644,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  syntax associativity left _==String__STRING_Bool_String_String
  syntax associativity left _=/=String__STRING_Bool_String_String
  syntax associativity left _+String__STRING_String_String_String
  syntax String ::= String "+String" String [function() functional() hook(STRING.concat) latex({#1}+_{\scriptstyle\it String}{#2}) left()]
  syntax String ::= "substrString" "(" String "," Int "," Int ")" [function() functional() hook(STRING.substr) klabel(substrString)]
  syntax String ::= "replaceFirst" "(" String "," String "," String ")" [function() functional() hook(STRING.replaceFirst)]
  syntax String ::= "replaceAll" "(" String "," String "," String ")" [function() functional() hook(STRING.replaceAll)]
  syntax String ::= "replace" "(" String "," String "," String "," Int ")" [function() hook(STRING.replace)]
  syntax String ::= "newUUID" [function() hook(STRING.uuid) impure()]
  syntax String ::= "directionalityChar" "(" String ")" [function() hook(STRING.directionality) klabel(directionalityChar)]
  syntax String ::= "chrChar" "(" Int ")" [function() hook(STRING.chr) klabel(chrChar)]
  syntax String ::= "categoryChar" "(" String ")" [function() hook(STRING.category) klabel(categoryChar)]
  syntax String ::= "Int2String" "(" Int ")" [function() functional() hook(STRING.int2string) klabel(Int2String)]
  syntax String ::= "Float2String" "(" Float "," String ")" [function() hook(STRING.floatFormat) klabel(FloatFormat)]
  syntax String ::= "Float2String" "(" Float ")" [function() functional() hook(STRING.float2string) klabel(Float2String)]
  syntax String ::= "Base2String" "(" Int "," Int ")" [function() hook(STRING.base2string) klabel(Base2String)]
  syntax Int ::= "rfindString" "(" String "," String "," Int ")" [function() hook(STRING.rfind) klabel(rfindString)]
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")" [function() hook(STRING.rfindChar) klabel(rfindChar)]
  syntax Int ::= "ordChar" "(" String ")" [function() hook(STRING.ord) klabel(ordChar)]
  syntax Int ::= "lengthString" "(" String ")" [function() functional() hook(STRING.length) klabel(lengthString)]
  syntax Int ::= "findString" "(" String "," String "," Int ")" [function() hook(STRING.find) klabel(findString)]
  syntax Int ::= "findChar" "(" String "," String "," Int ")" [function() hook(STRING.findChar) klabel(findChar)]
  syntax Int ::= "countAllOccurrences" "(" String "," String ")" [function() functional() hook(STRING.countAllOccurrences)]
  syntax Int ::= "String2Int" "(" String ")" [function() hook(STRING.string2int) klabel(String2Int)]
  syntax Int ::= "String2Base" "(" String "," Int ")" [function() hook(STRING.string2base) klabel(String2Base)]
  syntax Float ::= "String2Float" "(" String ")" [function() hook(STRING.string2float) klabel(String2Float)]
  syntax Bool ::= String ">String" String [function() functional() hook(STRING.gt)]
  syntax Bool ::= String ">=String" String [function() functional() hook(STRING.ge)]
  syntax Bool ::= String "==String" String [function() functional() hook(STRING.eq) left()]
  syntax Bool ::= String "=/=String" String [function() functional() hook(STRING.ne) left()]
  syntax Bool ::= String "<String" String [function() functional() hook(STRING.lt)]
  syntax Bool ::= String "<=String" String [function() functional() hook(STRING.le)]
endmodule


module STRING-BUFFER$SYNTAX [org.kframework.attributes.Location(Location(670,1,673,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-BUFFER-HOOKED$SYNTAX
endmodule


module STRING-BUFFER-HOOKED$SYNTAX [concrete() org.kframework.attributes.Location(Location(660,1,668,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _+String__STRING-BUFFER-HOOKED_StringBuffer_StringBuffer_String
  syntax StringBuffer [hook(BUFFER.StringBuffer) org.kframework.attributes.Location(Location(664,3,664,49)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax StringBuffer ::= StringBuffer "+String" String [avoid() function() functional() hook(BUFFER.concat) left()]
  syntax StringBuffer ::= "project:StringBuffer" "(" K ")" [function() projection()]
  syntax StringBuffer ::= ".StringBuffer" [function() functional() hook(BUFFER.empty) impure()]
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")" [function() functional() hook(BUFFER.toString) klabel(StringBuffer2String)]
  syntax KItem ::= StringBuffer
  syntax K
  syntax Bool ::= "isStringBuffer" "(" K ")" [function() predicate(StringBuffer)]
  rule `<generatedTop>`(`<T>`(`<k>`(`` `project:StringBuffer`(K)=>K``~>DotVar2),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(555,1,566,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  ModuleComment( StringChar ::= ~[\"\n\r\\] // anything except for Newline, DoubleQuote and Backslash,[org.kframework.attributes.Location(Location(558,3,558,90)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( DoubleQuote StringChar* DoubleQuote,[org.kframework.attributes.Location(Location(557,3,557,41)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Double Quoted Strings are of the form:,[org.kframework.attributes.Location(Location(556,3,556,44)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][x] 2*Hex // "\xFF"       Backslash 'x' followed by two   hexadecimal characters,[org.kframework.attributes.Location(Location(560,3,560,105)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][u] 4*Hex // "\uFFFF"     Backslash 'u' followed by four  hexadecimal characters,[org.kframework.attributes.Location(Location(561,3,561,105)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][nrtf\"\\] // Backslash followed by either 'nrtf', DoubleQuote or Backslash,[org.kframework.attributes.Location(Location(559,3,559,100)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][U] 8*Hex // "\UFFffFFff" Backslash 'U' followed by eight hexadecimal characters,[org.kframework.attributes.Location(Location(562,3,562,105)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(                              // the code must not be in the range [0xdfff, 0xd800] or exceed 0x10ffff,[org.kframework.attributes.Location(Location(563,3,563,107)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(555,1,566,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  ModuleComment( StringChar ::= ~[\"\n\r\\] // anything except for Newline, DoubleQuote and Backslash,[org.kframework.attributes.Location(Location(558,3,558,90)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( DoubleQuote StringChar* DoubleQuote,[org.kframework.attributes.Location(Location(557,3,557,41)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment( Double Quoted Strings are of the form:,[org.kframework.attributes.Location(Location(556,3,556,44)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][x] 2*Hex // "\xFF"       Backslash 'x' followed by two   hexadecimal characters,[org.kframework.attributes.Location(Location(560,3,560,105)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][u] 4*Hex // "\uFFFF"     Backslash 'u' followed by four  hexadecimal characters,[org.kframework.attributes.Location(Location(561,3,561,105)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][nrtf\"\\] // Backslash followed by either 'nrtf', DoubleQuote or Backslash,[org.kframework.attributes.Location(Location(559,3,559,100)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][U] 8*Hex // "\UFFffFFff" Backslash 'U' followed by eight hexadecimal characters,[org.kframework.attributes.Location(Location(562,3,562,105)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
  ModuleComment(                              // the code must not be in the range [0xdfff, 0xd800] or exceed 0x10ffff,[org.kframework.attributes.Location(Location(563,3,563,107)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))])
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(555,1,566,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(564,3,564,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
  syntax String ::= "project:String" "(" K ")" [function() projection()]
  syntax KItem ::= String
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isString" "(" K ")" [function() predicate(String)]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  rule `project:String`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(555,1,566,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(564,3,564,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
  syntax String ::= "project:String" "(" K ")" [function() projection()]
  syntax KItem ::= String
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isString" "(" K ")" [function() predicate(String)]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  rule `project:String`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(555,1,566,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(564,3,564,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
  syntax String ::= "project:String" "(" K ")" [function() projection()]
  syntax KItem ::= String
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isString" "(" K ")" [function() predicate(String)]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:String`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(356,1,359,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(356,1,359,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(356,1,359,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Int
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(357,3,357,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+" [prec(2) prefer() token()]
  syntax Int ::= "project:Int" "(" K ")" [function() projection()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isInt" "(" K ")" [function() predicate(Int)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(356,1,359,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Int
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(357,3,357,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+" [prec(2) prefer() token()]
  syntax Int ::= "project:Int" "(" K ")" [function() projection()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isInt" "(" K ")" [function() predicate(Int)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(356,1,359,9)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax KItem ::= Int
  syntax KItem ::= Bool
  syntax KItem ::= "project:KItem" "(" K ")" [function() projection()]
  syntax K
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(357,3,357,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+" [prec(2) prefer() token()]
  syntax Int ::= "project:Int" "(" K ")" [function() projection()]
  syntax Bool ::= "project:Bool" "(" K ")" [function() projection()]
  syntax Bool ::= "isKItem" "(" K ")" [function() predicate(KItem)]
  syntax Bool ::= "isK" "(" K ")" [function() predicate(K)]
  syntax Bool ::= "isInt" "(" K ")" [function() predicate(Int)]
  syntax Bool ::= "isBool" "(" K ")" [function() predicate(Bool)]
  rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Int`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  rule `project:Bool`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
endmodule